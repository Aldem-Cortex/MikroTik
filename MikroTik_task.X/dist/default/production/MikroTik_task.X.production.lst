

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jun 10 13:43:17 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 09/04/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F45J10 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  000DE0                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _RX_pointer
    87  000DE0  80                 	db	low _Receive_Buffer
    88  000DE1  00                 	db	high _Receive_Buffer
    89                           
    90                           ;initializer for _TX_pointer
    91  000DE2  C0                 	db	low _Transmit_Buffer
    92  000DE3  00                 	db	high _Transmit_Buffer
    93                           
    94                           ;initializer for _Current_LED
    95  000DE4  01                 	db	1
    96                           
    97                           ;initializer for _Direction
    98  000DE5  01                 	db	1
    99                           
   100                           ;initializer for _Timer_multiplier
   101  000DE6  0A                 	db	10
   102  0000                     _PORTBbits	set	3969
   103  0000                     _RCREG	set	4014
   104  0000                     _TXREG	set	4013
   105  0000                     _ADCON1	set	4033
   106  0000                     _ADCON0	set	4034
   107  0000                     _T0CONbits	set	4053
   108  0000                     _T0CON	set	4053
   109  0000                     _INTCON2bits	set	4081
   110  0000                     _IPR1bits	set	3999
   111  0000                     _PIE1bits	set	3997
   112  0000                     _RCONbits	set	4048
   113  0000                     _SPBRGH	set	4016
   114  0000                     _SPBRG	set	4015
   115  0000                     _BAUDCONbits	set	4024
   116  0000                     _RCSTAbits	set	4011
   117  0000                     _TXSTAbits	set	4012
   118  0000                     _OSCCON	set	4051
   119  0000                     _TRISA	set	3986
   120  0000                     _TRISB	set	3987
   121  0000                     _PORTAbits	set	3968
   122  0000                     _INTCONbits	set	4082
   123  0000                     _PIR1bits	set	3998
   124                           
   125                           	psect	smallconst
   126  000400                     __psmallconst:
   127                           	callstack 0
   128  000400  00                 	db	0
   129  000401                     STR_1:
   130  000401  46                 	db	70	;'F'
   131  000402  61                 	db	97	;'a'
   132  000403  69                 	db	105	;'i'
   133  000404  6C                 	db	108	;'l'
   134  000405  65                 	db	101	;'e'
   135  000406  64                 	db	100	;'d'
   136  000407  20                 	db	32
   137  000408  74                 	db	116	;'t'
   138  000409  6F                 	db	111	;'o'
   139  00040A  20                 	db	32
   140  00040B  63                 	db	99	;'c'
   141  00040C  6F                 	db	111	;'o'
   142  00040D  6E                 	db	110	;'n'
   143  00040E  66                 	db	102	;'f'
   144  00040F  69                 	db	105	;'i'
   145  000410  67                 	db	103	;'g'
   146  000411  75                 	db	117	;'u'
   147  000412  72                 	db	114	;'r'
   148  000413  65                 	db	101	;'e'
   149  000414  20                 	db	32
   150  000415  54                 	db	84	;'T'
   151  000416  69                 	db	105	;'i'
   152  000417  6D                 	db	109	;'m'
   153  000418  65                 	db	101	;'e'
   154  000419  72                 	db	114	;'r'
   155  00041A  20                 	db	32
   156  00041B  30                 	db	48	;'0'
   157  00041C  21                 	db	33
   158  00041D  0D                 	db	13
   159  00041E  00                 	db	0
   160  00041F                     STR_11:
   161  00041F  4C                 	db	76	;'L'
   162  000420  45                 	db	69	;'E'
   163  000421  44                 	db	68	;'D'
   164  000422  31                 	db	49	;'1'
   165  000423  30                 	db	48	;'0'
   166  000424  20                 	db	32
   167  000425  69                 	db	105	;'i'
   168  000426  73                 	db	115	;'s'
   169  000427  20                 	db	32
   170  000428  4F                 	db	79	;'O'
   171  000429  4E                 	db	78	;'N'
   172  00042A  0D                 	db	13
   173  00042B  00                 	db	0
   174  00042C                     STR_12:
   175  00042C  4C                 	db	76	;'L'
   176  00042D  45                 	db	69	;'E'
   177  00042E  44                 	db	68	;'D'
   178  00042F  31                 	db	49	;'1'
   179  000430  20                 	db	32
   180  000431  69                 	db	105	;'i'
   181  000432  73                 	db	115	;'s'
   182  000433  20                 	db	32
   183  000434  4F                 	db	79	;'O'
   184  000435  4E                 	db	78	;'N'
   185  000436  0D                 	db	13
   186  000437  00                 	db	0
   187  000438                     STR_3:
   188  000438  4C                 	db	76	;'L'
   189  000439  45                 	db	69	;'E'
   190  00043A  44                 	db	68	;'D'
   191  00043B  32                 	db	50	;'2'
   192  00043C  20                 	db	32
   193  00043D  69                 	db	105	;'i'
   194  00043E  73                 	db	115	;'s'
   195  00043F  20                 	db	32
   196  000440  4F                 	db	79	;'O'
   197  000441  4E                 	db	78	;'N'
   198  000442  0D                 	db	13
   199  000443  00                 	db	0
   200  000444                     STR_4:
   201  000444  4C                 	db	76	;'L'
   202  000445  45                 	db	69	;'E'
   203  000446  44                 	db	68	;'D'
   204  000447  33                 	db	51	;'3'
   205  000448  20                 	db	32
   206  000449  69                 	db	105	;'i'
   207  00044A  73                 	db	115	;'s'
   208  00044B  20                 	db	32
   209  00044C  4F                 	db	79	;'O'
   210  00044D  4E                 	db	78	;'N'
   211  00044E  0D                 	db	13
   212  00044F  00                 	db	0
   213  000450                     STR_5:
   214  000450  4C                 	db	76	;'L'
   215  000451  45                 	db	69	;'E'
   216  000452  44                 	db	68	;'D'
   217  000453  34                 	db	52	;'4'
   218  000454  20                 	db	32
   219  000455  69                 	db	105	;'i'
   220  000456  73                 	db	115	;'s'
   221  000457  20                 	db	32
   222  000458  4F                 	db	79	;'O'
   223  000459  4E                 	db	78	;'N'
   224  00045A  0D                 	db	13
   225  00045B  00                 	db	0
   226  00045C                     STR_6:
   227  00045C  4C                 	db	76	;'L'
   228  00045D  45                 	db	69	;'E'
   229  00045E  44                 	db	68	;'D'
   230  00045F  35                 	db	53	;'5'
   231  000460  20                 	db	32
   232  000461  69                 	db	105	;'i'
   233  000462  73                 	db	115	;'s'
   234  000463  20                 	db	32
   235  000464  4F                 	db	79	;'O'
   236  000465  4E                 	db	78	;'N'
   237  000466  0D                 	db	13
   238  000467  00                 	db	0
   239  000468                     STR_7:
   240  000468  4C                 	db	76	;'L'
   241  000469  45                 	db	69	;'E'
   242  00046A  44                 	db	68	;'D'
   243  00046B  36                 	db	54	;'6'
   244  00046C  20                 	db	32
   245  00046D  69                 	db	105	;'i'
   246  00046E  73                 	db	115	;'s'
   247  00046F  20                 	db	32
   248  000470  4F                 	db	79	;'O'
   249  000471  4E                 	db	78	;'N'
   250  000472  0D                 	db	13
   251  000473  00                 	db	0
   252  000474                     STR_8:
   253  000474  4C                 	db	76	;'L'
   254  000475  45                 	db	69	;'E'
   255  000476  44                 	db	68	;'D'
   256  000477  37                 	db	55	;'7'
   257  000478  20                 	db	32
   258  000479  69                 	db	105	;'i'
   259  00047A  73                 	db	115	;'s'
   260  00047B  20                 	db	32
   261  00047C  4F                 	db	79	;'O'
   262  00047D  4E                 	db	78	;'N'
   263  00047E  0D                 	db	13
   264  00047F  00                 	db	0
   265  000480                     STR_9:
   266  000480  4C                 	db	76	;'L'
   267  000481  45                 	db	69	;'E'
   268  000482  44                 	db	68	;'D'
   269  000483  38                 	db	56	;'8'
   270  000484  20                 	db	32
   271  000485  69                 	db	105	;'i'
   272  000486  73                 	db	115	;'s'
   273  000487  20                 	db	32
   274  000488  4F                 	db	79	;'O'
   275  000489  4E                 	db	78	;'N'
   276  00048A  0D                 	db	13
   277  00048B  00                 	db	0
   278  00048C                     STR_10:
   279  00048C  4C                 	db	76	;'L'
   280  00048D  45                 	db	69	;'E'
   281  00048E  44                 	db	68	;'D'
   282  00048F  39                 	db	57	;'9'
   283  000490  20                 	db	32
   284  000491  69                 	db	105	;'i'
   285  000492  73                 	db	115	;'s'
   286  000493  20                 	db	32
   287  000494  4F                 	db	79	;'O'
   288  000495  4E                 	db	78	;'N'
   289  000496  0D                 	db	13
   290  000497  00                 	db	0
   291  000498                     STR_2:
   292  000498  73                 	db	115	;'s'
   293  000499  70                 	db	112	;'p'
   294  00049A  65                 	db	101	;'e'
   295  00049B  65                 	db	101	;'e'
   296  00049C  64                 	db	100	;'d'
   297  00049D  3D                 	db	61	;'='
   298  00049E  00                 	db	0
   299  00049F  00                 	db	0	; dummy byte at the end
   300  0000                     
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304  000BDA                     __pcinit:
   305                           	callstack 0
   306  000BDA                     start_initialization:
   307                           	callstack 0
   308  000BDA                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to COMRAM (7 bytes)
   312                           ; load TBLPTR registers with __pidataCOMRAM
   313  000BDA  0EE0               	movlw	low __pidataCOMRAM
   314  000BDC  6EF6               	movwf	tblptrl,c
   315  000BDE  0E0D               	movlw	high __pidataCOMRAM
   316  000BE0  6EF7               	movwf	tblptrh,c
   317  000BE2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   318  000BE4  6EF8               	movwf	tblptru,c
   319  000BE6  EE00  F038         	lfsr	0,__pdataCOMRAM
   320  000BEA  EE10 F007          	lfsr	1,7
   321  000BEE                     copy_data0:
   322  000BEE  0009               	tblrd		*+
   323  000BF0  CFF5 FFEE          	movff	tablat,postinc0
   324  000BF4  50E5               	movf	postdec1,w,c
   325  000BF6  50E1               	movf	fsr1l,w,c
   326  000BF8  E1FA               	bnz	copy_data0
   327                           
   328                           ; Clear objects allocated to BANK0 (128 bytes)
   329  000BFA  EE00  F080         	lfsr	0,__pbssBANK0
   330  000BFE  0E80               	movlw	128
   331  000C00                     clear_0:
   332  000C00  6AEE               	clrf	postinc0,c
   333  000C02  06E8               	decf	wreg,f,c
   334  000C04  E1FD               	bnz	clear_0
   335                           
   336                           ; Clear objects allocated to COMRAM (3 bytes)
   337  000C06  6A41               	clrf	(__pbssCOMRAM+2)& (0+255),c
   338  000C08  6A40               	clrf	(__pbssCOMRAM+1)& (0+255),c
   339  000C0A  6A3F               	clrf	__pbssCOMRAM& (0+255),c
   340  000C0C                     end_of_initialization:
   341                           	callstack 0
   342  000C0C                     __end_of__initialization:
   343                           	callstack 0
   344  000C0C  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   345  000C0E  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   346  000C10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   347  000C12  6EF8               	movwf	tblptru,c
   348  000C14  0100               	movlb	0
   349  000C16  EFCD  F006         	goto	_main	;jump to C main() function
   350                           
   351                           	psect	bssCOMRAM
   352  00003F                     __pbssCOMRAM:
   353                           	callstack 0
   354  00003F                     _Timer_counter:
   355                           	callstack 0
   356  00003F                     	ds	2
   357  000041                     _received:
   358                           	callstack 0
   359  000041                     	ds	1
   360                           
   361                           	psect	dataCOMRAM
   362  000038                     __pdataCOMRAM:
   363                           	callstack 0
   364  000038                     _RX_pointer:
   365                           	callstack 0
   366  000038                     	ds	2
   367  00003A                     _TX_pointer:
   368                           	callstack 0
   369  00003A                     	ds	2
   370  00003C                     _Current_LED:
   371                           	callstack 0
   372  00003C                     	ds	1
   373  00003D                     _Direction:
   374                           	callstack 0
   375  00003D                     	ds	1
   376  00003E                     _Timer_multiplier:
   377                           	callstack 0
   378  00003E                     	ds	1
   379                           
   380                           	psect	bssBANK0
   381  000080                     __pbssBANK0:
   382                           	callstack 0
   383  000080                     _Receive_Buffer:
   384                           	callstack 0
   385  000080                     	ds	64
   386  0000C0                     _Transmit_Buffer:
   387                           	callstack 0
   388  0000C0                     	ds	64
   389                           
   390                           	psect	cstackCOMRAM
   391  000001                     __pcstackCOMRAM:
   392                           	callstack 0
   393  000001                     ?_strlen:
   394                           	callstack 0
   395  000001                     ?_strncmp:
   396                           	callstack 0
   397  000001                     ?_strchr:
   398                           	callstack 0
   399  000001                     EUSART_Transmit@buffer:
   400                           	callstack 0
   401  000001                     strchr@s:
   402                           	callstack 0
   403  000001                     strlen@s:
   404                           	callstack 0
   405  000001                     strncmp@_l:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x0
   409  000001                     	ds	2
   410  000003                     ??_EUSART_Transmit:
   411  000003                     strchr@c:
   412                           	callstack 0
   413  000003                     strlen@a:
   414                           	callstack 0
   415  000003                     strncmp@_r:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x2
   419  000003                     	ds	2
   420  000005                     strncmp@n:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x4
   424  000005                     	ds	1
   425  000006                     EUSART_Transmit@size:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x5
   429  000006                     	ds	1
   430  000007                     ??_strncmp:
   431  000007                     EUSART_Transmit@i:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x6
   435  000007                     	ds	1
   436  000008                     strncmp@l:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x7
   440  000008                     	ds	2
   441  00000A                     strncmp@r:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x9
   445  00000A                     	ds	2
   446  00000C                     ?_strstr:
   447                           	callstack 0
   448  00000C                     strstr@h:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0xB
   452  00000C                     	ds	2
   453  00000E                     strstr@n:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xD
   457  00000E                     	ds	2
   458  000010                     strstr@nl:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xF
   462  000010                     	ds	2
   463  000012                     ??_EUSART_Analize_data:
   464                           
   465                           ; 1 bytes @ 0x11
   466  000012                     	ds	2
   467  000014                     EUSART_Analize_data@temp_data:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x13
   471  000014                     	ds	1
   472  000015                     EUSART_Analize_data@temp_pointer:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x14
   476  000015                     	ds	2
   477  000017                     ??_RX_TX:
   478                           
   479                           ; 1 bytes @ 0x16
   480  000017                     	ds	8
   481  00001F                     RX_TX@temp:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x1E
   485  00001F                     	ds	1
   486  000020                     ?___wmul:
   487                           	callstack 0
   488  000020                     ___wmul@multiplier:
   489                           	callstack 0
   490  000020                     i1strcpy@dest:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x1F
   494  000020                     	ds	2
   495  000022                     ___wmul@multiplicand:
   496                           	callstack 0
   497  000022                     i1strcpy@src:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x21
   501  000022                     	ds	2
   502  000024                     ___wmul@product:
   503                           	callstack 0
   504  000024                     i1strcpy@s:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x23
   508  000024                     	ds	2
   509  000026                     i1strcpy@d:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x25
   513  000026                     	ds	2
   514  000028                     ??_LED_Controller_Switch_Right:
   515  000028                     ??_LED_Controller_Switch_Left:
   516                           
   517                           ; 1 bytes @ 0x27
   518  000028                     	ds	2
   519  00002A                     LED_Controller_Switch_Right@current_led:
   520                           	callstack 0
   521  00002A                     LED_Controller_Switch_Left@current_led:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x29
   525  00002A                     	ds	1
   526  00002B                     ??_Timers:
   527                           
   528                           ; 1 bytes @ 0x2A
   529  00002B                     	ds	5
   530  000030                     ??_Set_PORTB_as_input:
   531  000030                     ??_Set_PORTA_as_output:
   532  000030                     ??_Set_PORTB_as_output:
   533  000030                     Configure_T0@prescaler:
   534                           	callstack 0
   535  000030                     strcpy@dest:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x2F
   539  000030                     	ds	2
   540  000032                     ??_Configure_T0:
   541  000032                     Set_PORTB_as_input@port:
   542                           	callstack 0
   543  000032                     Set_PORTA_as_output@port:
   544                           	callstack 0
   545  000032                     Set_PORTB_as_output@port:
   546                           	callstack 0
   547  000032                     strcpy@src:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x31
   551  000032                     	ds	1
   552  000033                     
   553                           ; 1 bytes @ 0x32
   554  000033                     	ds	1
   555  000034                     Configure_T0@bits:
   556                           	callstack 0
   557  000034                     strcpy@s:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x33
   561  000034                     	ds	2
   562  000036                     strcpy@d:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x35
   566  000036                     	ds	2
   567  000038                     
   568                           ; 1 bytes @ 0x37
   569 ;;
   570 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   571 ;;
   572 ;; *************** function _main *****************
   573 ;; Defined at:
   574 ;;		line 88 in file "Task_main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels required when called:    9
   594 ;; This function calls:
   595 ;;		_EUSART_Turn_RX_ON
   596 ;;		_GPIO_Setup
   597 ;;		_Init_Startup
   598 ;;		_Timers_Turn_T0_ON
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text0
   605  000D9A                     __ptext0:
   606                           	callstack 0
   607  000D9A                     _main:
   608                           	callstack 22
   609  000D9A                     
   610                           ;Task_main.c: 90:     Init_Startup();
   611  000D9A  ECC8  F005         	call	_Init_Startup	;wreg free
   612  000D9E                     
   613                           ;Task_main.c: 92:     GPIO_Setup();
   614  000D9E  EC7A  F005         	call	_GPIO_Setup	;wreg free
   615  000DA2                     
   616                           ;Task_main.c: 94:     EUSART_Turn_RX_ON();
   617  000DA2  ECFB  F006         	call	_EUSART_Turn_RX_ON	;wreg free
   618  000DA6                     
   619                           ;Task_main.c: 96:     Timers_Turn_T0_ON();
   620  000DA6  ECF7  F006         	call	_Timers_Turn_T0_ON	;wreg free
   621  000DAA                     
   622                           ;Task_main.c: 98:     PORTAbits.RA0 = 1;
   623  000DAA  8080               	bsf	128,0,c	;volatile
   624  000DAC                     l67:
   625  000DAC  0004               	clrwdt		;# 
   626  000DAE  EFD6  F006         	goto	l67
   627  000DB2  EF61  F000         	goto	start
   628  000DB6                     __end_of_main:
   629                           	callstack 0
   630                           
   631 ;; *************** function _Timers_Turn_T0_ON *****************
   632 ;; Defined at:
   633 ;;		line 6 in file "Timers.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		None
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   647 ;;      Params:         0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    7
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text1
   662  000DEE                     __ptext1:
   663                           	callstack 0
   664  000DEE                     _Timers_Turn_T0_ON:
   665                           	callstack 23
   666  000DEE                     
   667                           ;Timers.c: 7:     T0CONbits.TMR0ON = 1;
   668  000DEE  8ED5               	bsf	213,7,c	;volatile
   669  000DF0  0012               	return		;funcret
   670  000DF2                     __end_of_Timers_Turn_T0_ON:
   671                           	callstack 0
   672                           
   673 ;; *************** function _Init_Startup *****************
   674 ;; Defined at:
   675 ;;		line 104 in file "Init.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    8
   696 ;; This function calls:
   697 ;;		_Configure_T0
   698 ;;		_EUSART_Turn_TX_ON
   699 ;;		_Set_EUSART
   700 ;;		_Toggle_HS_Osc
   701 ;;		_Turn_on_Interrupts
   702 ;;		_strcpy
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text2
   709  000B90                     __ptext2:
   710                           	callstack 0
   711  000B90                     _Init_Startup:
   712                           	callstack 22
   713  000B90                     
   714                           ;Init.c: 106:     ADCON0 = 0;
   715  000B90  0E00               	movlw	0
   716  000B92  6EC2               	movwf	194,c	;volatile
   717  000B94                     
   718                           ;Init.c: 107:     ADCON1 = 0xFF;
   719  000B94  68C1               	setf	193,c	;volatile
   720  000B96                     
   721                           ;Init.c: 110:     Toggle_HS_Osc();
   722  000B96  ECF4  F006         	call	_Toggle_HS_Osc	;wreg free
   723  000B9A                     
   724                           ;Init.c: 113:     if(Configure_T0(16,256)){
   725  000B9A  0E01               	movlw	1
   726  000B9C  6E31               	movwf	(Configure_T0@prescaler+1)^0,c
   727  000B9E  0E00               	movlw	0
   728  000BA0  6E30               	movwf	Configure_T0@prescaler^0,c
   729  000BA2  0E10               	movlw	16
   730  000BA4  ECF6  F002         	call	_Configure_T0
   731  000BA8  0900               	iorlw	0
   732  000BAA  B4D8               	btfsc	status,2,c
   733  000BAC  EFDA  F005         	goto	u621
   734  000BB0  EFDC  F005         	goto	u620
   735  000BB4                     u621:
   736  000BB4  EFE8  F005         	goto	l1835
   737  000BB8                     u620:
   738  000BB8                     
   739                           ;Init.c: 114:         strcpy(TX_pointer,"Failed to configure Timer 0!\r");
   740  000BB8  C03A  F030         	movff	_TX_pointer,strcpy@dest
   741  000BBC  C03B  F031         	movff	_TX_pointer+1,strcpy@dest+1
   742  000BC0  0E01               	movlw	low STR_1
   743  000BC2  6E32               	movwf	strcpy@src^0,c
   744  000BC4  0E04               	movlw	high STR_1
   745  000BC6  6E33               	movwf	(strcpy@src+1)^0,c
   746  000BC8  EC0D  F006         	call	_strcpy	;wreg free
   747  000BCC                     
   748                           ;Init.c: 115:         EUSART_Turn_TX_ON();
   749  000BCC  ECF9  F006         	call	_EUSART_Turn_TX_ON	;wreg free
   750  000BD0                     l1835:
   751                           
   752                           ;Init.c: 119:     Set_EUSART();
   753  000BD0  ECE7  F006         	call	_Set_EUSART	;wreg free
   754  000BD4                     
   755                           ;Init.c: 122:     Turn_on_Interrupts();
   756  000BD4  ECDB  F006         	call	_Turn_on_Interrupts	;wreg free
   757  000BD8  0012               	return		;funcret
   758  000BDA                     __end_of_Init_Startup:
   759                           	callstack 0
   760                           
   761 ;; *************** function _strcpy *****************
   762 ;; Defined at:
   763 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  dest            2   47[COMRAM] PTR unsigned char 
   766 ;;		 -> Transmit_Buffer(64), 
   767 ;;  src             2   49[COMRAM] PTR const unsigned char 
   768 ;;		 -> STR_22(12), STR_21(12), STR_20(12), STR_19(12), 
   769 ;;		 -> STR_18(12), STR_17(12), STR_16(12), STR_15(12), 
   770 ;;		 -> STR_14(12), STR_13(13), STR_12(12), STR_11(13), 
   771 ;;		 -> STR_10(12), STR_9(12), STR_8(12), STR_7(12), 
   772 ;;		 -> STR_6(12), STR_5(12), STR_4(12), STR_3(12), 
   773 ;;		 -> STR_1(30), 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  d               2   53[COMRAM] PTR unsigned char 
   776 ;;		 -> Transmit_Buffer(64), 
   777 ;;  s               2   51[COMRAM] PTR const unsigned char 
   778 ;;		 -> STR_22(12), STR_21(12), STR_20(12), STR_19(12), 
   779 ;;		 -> STR_18(12), STR_17(12), STR_16(12), STR_15(12), 
   780 ;;		 -> STR_14(12), STR_13(13), STR_12(12), STR_11(13), 
   781 ;;		 -> STR_10(12), STR_9(12), STR_8(12), STR_7(12), 
   782 ;;		 -> STR_6(12), STR_5(12), STR_4(12), STR_3(12), 
   783 ;;		 -> STR_1(30), 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  2   47[COMRAM] PTR unsigned char 
   786 ;; Registers used:
   787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   793 ;;      Params:         4       0       0       0       0
   794 ;;      Locals:         4       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0
   796 ;;      Totals:         8       0       0       0       0
   797 ;;Total ram usage:        8 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    7
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_Init_Startup
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text3
   808  000C1A                     __ptext3:
   809                           	callstack 0
   810  000C1A                     _strcpy:
   811                           	callstack 22
   812  000C1A  C032  F034         	movff	strcpy@src,strcpy@s
   813  000C1E  C033  F035         	movff	strcpy@src+1,strcpy@s+1
   814  000C22  C030  F036         	movff	strcpy@dest,strcpy@d
   815  000C26  C031  F037         	movff	strcpy@dest+1,strcpy@d+1
   816  000C2A                     l1557:
   817  000C2A  C034  FFF6         	movff	strcpy@s,tblptrl
   818  000C2E  C035  FFF7         	movff	strcpy@s+1,tblptrh
   819  000C32  4A34               	infsnz	strcpy@s^0,f,c
   820  000C34  2A35               	incf	(strcpy@s+1)^0,f,c
   821  000C36                     	if	0	;tblptru may be non-zero
   822  000C36                     	endif
   823  000C36                     	if	0	;tblptru may be non-zero
   824  000C36                     	endif
   825  000C36  C036  FFD9         	movff	strcpy@d,fsr2l
   826  000C3A  C037  FFDA         	movff	strcpy@d+1,fsr2h
   827  000C3E  4A36               	infsnz	strcpy@d^0,f,c
   828  000C40  2A37               	incf	(strcpy@d+1)^0,f,c
   829  000C42  0008               	tblrd		*
   830  000C44  CFF5 FFDF          	movff	tablat,indf2
   831  000C48  50DF               	movf	indf2,w,c
   832  000C4A  A4D8               	btfss	status,2,c
   833  000C4C  EF2A  F006         	goto	u471
   834  000C50  EF2C  F006         	goto	u470
   835  000C54                     u471:
   836  000C54  EF15  F006         	goto	l1557
   837  000C58                     u470:
   838  000C58  0012               	return		;funcret
   839  000C5A                     __end_of_strcpy:
   840                           	callstack 0
   841                           
   842 ;; *************** function _Turn_on_Interrupts *****************
   843 ;; Defined at:
   844 ;;		line 20 in file "Init.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		None
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    7
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_Init_Startup
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text4
   873  000DB6                     __ptext4:
   874                           	callstack 0
   875  000DB6                     _Turn_on_Interrupts:
   876                           	callstack 22
   877  000DB6                     
   878                           ;Init.c: 22:     RCONbits.IPEN = 1;
   879  000DB6  8ED0               	bsf	208,7,c	;volatile
   880                           
   881                           ;Init.c: 24:     INTCONbits.GIE = 1;
   882  000DB8  8EF2               	bsf	242,7,c	;volatile
   883                           
   884                           ;Init.c: 26:     INTCONbits.PEIE = 1;
   885  000DBA  8CF2               	bsf	242,6,c	;volatile
   886                           
   887                           ;Init.c: 28:     PIE1bits.TXIE = 1;
   888  000DBC  889D               	bsf	157,4,c	;volatile
   889                           
   890                           ;Init.c: 29:     PIE1bits.RCIE = 1;
   891  000DBE  8A9D               	bsf	157,5,c	;volatile
   892                           
   893                           ;Init.c: 31:     INTCONbits.RBIE = 1;
   894  000DC0  86F2               	bsf	242,3,c	;volatile
   895                           
   896                           ;Init.c: 33:     IPR1bits.RCIP = 1;
   897  000DC2  8A9F               	bsf	159,5,c	;volatile
   898                           
   899                           ;Init.c: 34:     IPR1bits.TXIP = 1;
   900  000DC4  889F               	bsf	159,4,c	;volatile
   901                           
   902                           ;Init.c: 36:     INTCON2bits.TMR0IP = 0;
   903  000DC6  94F1               	bcf	241,2,c	;volatile
   904                           
   905                           ;Init.c: 38:     INTCON2bits.RBIP = 0;
   906  000DC8  90F1               	bcf	241,0,c	;volatile
   907                           
   908                           ;Init.c: 40:     INTCONbits.TMR0IE = 1;
   909  000DCA  8AF2               	bsf	242,5,c	;volatile
   910  000DCC  0012               	return		;funcret
   911  000DCE                     __end_of_Turn_on_Interrupts:
   912                           	callstack 0
   913                           
   914 ;; *************** function _Toggle_HS_Osc *****************
   915 ;; Defined at:
   916 ;;		line 3 in file "Init.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    7
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_Init_Startup
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text5
   945  000DE8                     __ptext5:
   946                           	callstack 0
   947  000DE8                     _Toggle_HS_Osc:
   948                           	callstack 22
   949  000DE8                     
   950                           ;Init.c: 4:     OSCCON ^= 0x2;
   951  000DE8  0E02               	movlw	2
   952  000DEA  1AD3               	xorwf	211,f,c	;volatile
   953  000DEC  0012               	return		;funcret
   954  000DEE                     __end_of_Toggle_HS_Osc:
   955                           	callstack 0
   956                           
   957 ;; *************** function _Set_EUSART *****************
   958 ;; Defined at:
   959 ;;		line 7 in file "Init.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    7
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_Init_Startup
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text6
   988  000DCE                     __ptext6:
   989                           	callstack 0
   990  000DCE                     _Set_EUSART:
   991                           	callstack 22
   992  000DCE                     
   993                           ;Init.c: 9:     TXSTAbits.SYNC = 0;
   994  000DCE  98AC               	bcf	172,4,c	;volatile
   995                           
   996                           ;Init.c: 10:     RCSTAbits.SPEN = 1;
   997  000DD0  8EAB               	bsf	171,7,c	;volatile
   998                           
   999                           ;Init.c: 13:     TXSTAbits.BRGH = 0;
  1000  000DD2  94AC               	bcf	172,2,c	;volatile
  1001                           
  1002                           ;Init.c: 14:     BAUDCONbits.BRG16 = 0;
  1003  000DD4  96B8               	bcf	184,3,c	;volatile
  1004  000DD6                     
  1005                           ;Init.c: 15:     SPBRG = 15;
  1006  000DD6  0E0F               	movlw	15
  1007  000DD8  6EAF               	movwf	175,c	;volatile
  1008                           
  1009                           ;Init.c: 16:     SPBRGH = 0;
  1010  000DDA  0E00               	movlw	0
  1011  000DDC  6EB0               	movwf	176,c	;volatile
  1012  000DDE  0012               	return		;funcret
  1013  000DE0                     __end_of_Set_EUSART:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _EUSART_Turn_TX_ON *****************
  1017 ;; Defined at:
  1018 ;;		line 3 in file "EUSART.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		None
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1032 ;;      Params:         0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    7
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_Init_Startup
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text7
  1047  000DF2                     __ptext7:
  1048                           	callstack 0
  1049  000DF2                     _EUSART_Turn_TX_ON:
  1050                           	callstack 22
  1051  000DF2                     
  1052                           ;EUSART.c: 4:     TXSTAbits.TXEN = 1;
  1053  000DF2  8AAC               	bsf	172,5,c	;volatile
  1054  000DF4  0012               	return		;funcret
  1055  000DF6                     __end_of_EUSART_Turn_TX_ON:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _Configure_T0 *****************
  1059 ;; Defined at:
  1060 ;;		line 44 in file "Init.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  bits            1    wreg     unsigned char 
  1063 ;;  prescaler       2   47[COMRAM] unsigned int 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  bits            1   51[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      unsigned char 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1075 ;;      Params:         2       0       0       0       0
  1076 ;;      Locals:         1       0       0       0       0
  1077 ;;      Temps:          2       0       0       0       0
  1078 ;;      Totals:         5       0       0       0       0
  1079 ;;Total ram usage:        5 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    7
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_Init_Startup
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text8
  1090  0005EC                     __ptext8:
  1091                           	callstack 0
  1092  0005EC                     _Configure_T0:
  1093                           	callstack 22
  1094                           
  1095                           ;incstack = 0
  1096                           ;Configure_T0@bits stored from wreg
  1097  0005EC  6E34               	movwf	Configure_T0@bits^0,c
  1098  0005EE                     
  1099                           ;Init.c: 47:     switch(prescaler){
  1100  0005EE  EF24  F003         	goto	l1529
  1101  0005F2                     l1507:
  1102                           
  1103                           ;Init.c: 49:             T0CON &= ~(1 << 2);
  1104  0005F2  94D5               	bcf	213,2,c	;volatile
  1105                           
  1106                           ;Init.c: 50:             T0CON &= ~(1 << 1);
  1107  0005F4  92D5               	bcf	213,1,c	;volatile
  1108                           
  1109                           ;Init.c: 51:             T0CON &= ~(1 << 0);
  1110  0005F6  90D5               	bcf	213,0,c	;volatile
  1111                           
  1112                           ;Init.c: 52:             break;
  1113  0005F8  EF59  F003         	goto	l1531
  1114  0005FC                     l1509:
  1115                           
  1116                           ;Init.c: 54:             T0CON &= ~(1 << 2);
  1117  0005FC  94D5               	bcf	213,2,c	;volatile
  1118                           
  1119                           ;Init.c: 55:             T0CON &= ~(1 << 1);
  1120  0005FE  92D5               	bcf	213,1,c	;volatile
  1121                           
  1122                           ;Init.c: 56:             T0CON |= 1;
  1123  000600  80D5               	bsf	213,0,c	;volatile
  1124                           
  1125                           ;Init.c: 57:             break;
  1126  000602  EF59  F003         	goto	l1531
  1127  000606                     l1511:
  1128                           
  1129                           ;Init.c: 59:             T0CON &= ~(1 << 2);
  1130  000606  94D5               	bcf	213,2,c	;volatile
  1131                           
  1132                           ;Init.c: 60:             T0CON |= (1 << 1);
  1133  000608  82D5               	bsf	213,1,c	;volatile
  1134                           
  1135                           ;Init.c: 61:             T0CON &= ~(1 << 0);
  1136  00060A  90D5               	bcf	213,0,c	;volatile
  1137                           
  1138                           ;Init.c: 62:             break;
  1139  00060C  EF59  F003         	goto	l1531
  1140  000610                     l1513:
  1141                           
  1142                           ;Init.c: 64:             T0CON &= ~(1 << 2);
  1143  000610  94D5               	bcf	213,2,c	;volatile
  1144                           
  1145                           ;Init.c: 65:             T0CON |= (1 << 1);
  1146  000612  82D5               	bsf	213,1,c	;volatile
  1147                           
  1148                           ;Init.c: 66:             T0CON |= (1 << 0);
  1149  000614  80D5               	bsf	213,0,c	;volatile
  1150                           
  1151                           ;Init.c: 67:             break;
  1152  000616  EF59  F003         	goto	l1531
  1153  00061A                     l1515:
  1154                           
  1155                           ;Init.c: 69:             T0CON |= (1 << 2);
  1156  00061A  84D5               	bsf	213,2,c	;volatile
  1157                           
  1158                           ;Init.c: 70:             T0CON &= ~(1 << 1);
  1159  00061C  92D5               	bcf	213,1,c	;volatile
  1160                           
  1161                           ;Init.c: 71:             T0CON &= ~(1 << 0);
  1162  00061E  90D5               	bcf	213,0,c	;volatile
  1163                           
  1164                           ;Init.c: 72:             break;
  1165  000620  EF59  F003         	goto	l1531
  1166  000624                     l1517:
  1167                           
  1168                           ;Init.c: 74:             T0CON |= (1 << 2);
  1169  000624  84D5               	bsf	213,2,c	;volatile
  1170                           
  1171                           ;Init.c: 75:             T0CON &= ~(1 << 1);
  1172  000626  92D5               	bcf	213,1,c	;volatile
  1173                           
  1174                           ;Init.c: 76:             T0CON |= (1 << 0);
  1175  000628  80D5               	bsf	213,0,c	;volatile
  1176                           
  1177                           ;Init.c: 77:             break;
  1178  00062A  EF59  F003         	goto	l1531
  1179  00062E                     l1519:
  1180                           
  1181                           ;Init.c: 79:             T0CON |= (1 << 2);
  1182  00062E  84D5               	bsf	213,2,c	;volatile
  1183                           
  1184                           ;Init.c: 80:             T0CON |= (1 << 1);
  1185  000630  82D5               	bsf	213,1,c	;volatile
  1186                           
  1187                           ;Init.c: 81:             T0CON &= ~(1 << 0);
  1188  000632  90D5               	bcf	213,0,c	;volatile
  1189                           
  1190                           ;Init.c: 82:             break;
  1191  000634  EF59  F003         	goto	l1531
  1192  000638                     l1521:
  1193                           
  1194                           ;Init.c: 84:             T0CON |= (1 << 2);
  1195  000638  84D5               	bsf	213,2,c	;volatile
  1196                           
  1197                           ;Init.c: 85:             T0CON |= (1 << 1);
  1198  00063A  82D5               	bsf	213,1,c	;volatile
  1199                           
  1200                           ;Init.c: 86:             T0CON |= (1 << 0);
  1201  00063C  80D5               	bsf	213,0,c	;volatile
  1202                           
  1203                           ;Init.c: 87:             break;
  1204  00063E  EF59  F003         	goto	l1531
  1205  000642                     l1523:
  1206                           
  1207                           ;Init.c: 89:             return 0;
  1208  000642  0E00               	movlw	0
  1209  000644  EF70  F003         	goto	l153
  1210  000648                     l1529:
  1211  000648  C030  F032         	movff	Configure_T0@prescaler,??_Configure_T0
  1212  00064C  C031  F033         	movff	Configure_T0@prescaler+1,??_Configure_T0+1
  1213                           
  1214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1215                           ; Switch size 1, requested type "simple"
  1216                           ; Number of cases is 2, Range of values is 0 to 1
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte            7     4 (average)
  1220                           ;	Chosen strategy is simple_byte
  1221  000650  5033               	movf	(??_Configure_T0+1)^0,w,c
  1222  000652  0A00               	xorlw	0	; case 0
  1223  000654  B4D8               	btfsc	status,2,c
  1224  000656  EF33  F003         	goto	l1911
  1225  00065A  0A01               	xorlw	1	; case 1
  1226  00065C  B4D8               	btfsc	status,2,c
  1227  00065E  EF52  F003         	goto	l1913
  1228  000662  EF21  F003         	goto	l1523
  1229  000666                     l1911:
  1230                           
  1231                           ; Switch size 1, requested type "simple"
  1232                           ; Number of cases is 7, Range of values is 2 to 128
  1233                           ; switch strategies available:
  1234                           ; Name         Instructions Cycles
  1235                           ; simple_byte           22    12 (average)
  1236                           ;	Chosen strategy is simple_byte
  1237  000666  5032               	movf	??_Configure_T0^0,w,c
  1238  000668  0A02               	xorlw	2	; case 2
  1239  00066A  B4D8               	btfsc	status,2,c
  1240  00066C  EFF9  F002         	goto	l1507
  1241  000670  0A06               	xorlw	6	; case 4
  1242  000672  B4D8               	btfsc	status,2,c
  1243  000674  EFFE  F002         	goto	l1509
  1244  000678  0A0C               	xorlw	12	; case 8
  1245  00067A  B4D8               	btfsc	status,2,c
  1246  00067C  EF03  F003         	goto	l1511
  1247  000680  0A18               	xorlw	24	; case 16
  1248  000682  B4D8               	btfsc	status,2,c
  1249  000684  EF08  F003         	goto	l1513
  1250  000688  0A30               	xorlw	48	; case 32
  1251  00068A  B4D8               	btfsc	status,2,c
  1252  00068C  EF0D  F003         	goto	l1515
  1253  000690  0A60               	xorlw	96	; case 64
  1254  000692  B4D8               	btfsc	status,2,c
  1255  000694  EF12  F003         	goto	l1517
  1256  000698  0AC0               	xorlw	192	; case 128
  1257  00069A  B4D8               	btfsc	status,2,c
  1258  00069C  EF17  F003         	goto	l1519
  1259  0006A0  EF21  F003         	goto	l1523
  1260  0006A4                     l1913:
  1261                           
  1262                           ; Switch size 1, requested type "simple"
  1263                           ; Number of cases is 1, Range of values is 0 to 0
  1264                           ; switch strategies available:
  1265                           ; Name         Instructions Cycles
  1266                           ; simple_byte            4     3 (average)
  1267                           ;	Chosen strategy is simple_byte
  1268  0006A4  5032               	movf	??_Configure_T0^0,w,c
  1269  0006A6  0A00               	xorlw	0	; case 0
  1270  0006A8  B4D8               	btfsc	status,2,c
  1271  0006AA  EF1C  F003         	goto	l1521
  1272  0006AE  EF21  F003         	goto	l1523
  1273  0006B2                     l1531:
  1274                           
  1275                           ;Init.c: 92:     if(bits == 8){
  1276  0006B2  0E08               	movlw	8
  1277  0006B4  1834               	xorwf	Configure_T0@bits^0,w,c
  1278  0006B6  A4D8               	btfss	status,2,c
  1279  0006B8  EF60  F003         	goto	u451
  1280  0006BC  EF62  F003         	goto	u450
  1281  0006C0                     u451:
  1282  0006C0  EF65  F003         	goto	l1535
  1283  0006C4                     u450:
  1284  0006C4                     
  1285                           ;Init.c: 93:         T0CONbits.T08BIT = 1;
  1286  0006C4  8CD5               	bsf	213,6,c	;volatile
  1287                           
  1288                           ;Init.c: 94:     }
  1289  0006C6  EF6F  F003         	goto	l1543
  1290  0006CA                     l1535:
  1291  0006CA  0E10               	movlw	16
  1292  0006CC  1834               	xorwf	Configure_T0@bits^0,w,c
  1293  0006CE  A4D8               	btfss	status,2,c
  1294  0006D0  EF6C  F003         	goto	u461
  1295  0006D4  EF6E  F003         	goto	u460
  1296  0006D8                     u461:
  1297  0006D8  EF21  F003         	goto	l1523
  1298  0006DC                     u460:
  1299  0006DC                     
  1300                           ;Init.c: 96:         T0CONbits.T08BIT = 0;
  1301  0006DC  9CD5               	bcf	213,6,c	;volatile
  1302  0006DE                     l1543:
  1303                           
  1304                           ;Init.c: 101:     return 1;
  1305  0006DE  0E01               	movlw	1
  1306  0006E0                     l153:
  1307  0006E0  0012               	return		;funcret
  1308  0006E2                     __end_of_Configure_T0:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _GPIO_Setup *****************
  1312 ;; Defined at:
  1313 ;;		line 19 in file "GPIO.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    8
  1334 ;; This function calls:
  1335 ;;		_Set_PORTA_as_output
  1336 ;;		_Set_PORTB_as_input
  1337 ;;		_Set_PORTB_as_output
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text9
  1344  000AF4                     __ptext9:
  1345                           	callstack 0
  1346  000AF4                     _GPIO_Setup:
  1347                           	callstack 22
  1348  000AF4                     
  1349                           ;GPIO.c: 20:     Set_PORTA_as_output(0);
  1350  000AF4  0E00               	movlw	0
  1351  000AF6  ECAC  F006         	call	_Set_PORTA_as_output
  1352                           
  1353                           ;GPIO.c: 21:     Set_PORTA_as_output(1);
  1354  000AFA  0E01               	movlw	1
  1355  000AFC  ECAC  F006         	call	_Set_PORTA_as_output
  1356                           
  1357                           ;GPIO.c: 22:     Set_PORTA_as_output(2);
  1358  000B00  0E02               	movlw	2
  1359  000B02  ECAC  F006         	call	_Set_PORTA_as_output
  1360                           
  1361                           ;GPIO.c: 23:     Set_PORTA_as_output(3);
  1362  000B06  0E03               	movlw	3
  1363  000B08  ECAC  F006         	call	_Set_PORTA_as_output
  1364                           
  1365                           ;GPIO.c: 24:     Set_PORTA_as_output(5);
  1366  000B0C  0E05               	movlw	5
  1367  000B0E  ECAC  F006         	call	_Set_PORTA_as_output
  1368                           
  1369                           ;GPIO.c: 25:     Set_PORTB_as_output(0);
  1370  000B12  0E00               	movlw	0
  1371  000B14  EC9B  F006         	call	_Set_PORTB_as_output
  1372                           
  1373                           ;GPIO.c: 26:     Set_PORTB_as_output(1);
  1374  000B18  0E01               	movlw	1
  1375  000B1A  EC9B  F006         	call	_Set_PORTB_as_output
  1376                           
  1377                           ;GPIO.c: 27:     Set_PORTB_as_output(2);
  1378  000B1E  0E02               	movlw	2
  1379  000B20  EC9B  F006         	call	_Set_PORTB_as_output
  1380                           
  1381                           ;GPIO.c: 28:     Set_PORTB_as_output(3);
  1382  000B24  0E03               	movlw	3
  1383  000B26  EC9B  F006         	call	_Set_PORTB_as_output
  1384                           
  1385                           ;GPIO.c: 29:     Set_PORTB_as_output(4);
  1386  000B2A  0E04               	movlw	4
  1387  000B2C  EC9B  F006         	call	_Set_PORTB_as_output
  1388                           
  1389                           ;GPIO.c: 30:     Set_PORTB_as_input(5);
  1390  000B30  0E05               	movlw	5
  1391  000B32  ECBD  F006         	call	_Set_PORTB_as_input
  1392                           
  1393                           ;GPIO.c: 31:     Set_PORTB_as_output(6);
  1394  000B36  0E06               	movlw	6
  1395  000B38  EC9B  F006         	call	_Set_PORTB_as_output
  1396                           
  1397                           ;GPIO.c: 32:     Set_PORTB_as_output(7);
  1398  000B3C  0E07               	movlw	7
  1399  000B3E  EC9B  F006         	call	_Set_PORTB_as_output
  1400  000B42  0012               	return		;funcret
  1401  000B44                     __end_of_GPIO_Setup:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _Set_PORTB_as_output *****************
  1405 ;; Defined at:
  1406 ;;		line 14 in file "GPIO.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  port            1    wreg     unsigned char 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  port            1   49[COMRAM] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1420 ;;      Params:         0       0       0       0       0
  1421 ;;      Locals:         1       0       0       0       0
  1422 ;;      Temps:          2       0       0       0       0
  1423 ;;      Totals:         3       0       0       0       0
  1424 ;;Total ram usage:        3 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    7
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_GPIO_Setup
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text10
  1435  000D36                     __ptext10:
  1436                           	callstack 0
  1437  000D36                     _Set_PORTB_as_output:
  1438                           	callstack 22
  1439                           
  1440                           ;incstack = 0
  1441                           ;Set_PORTB_as_output@port stored from wreg
  1442  000D36  6E32               	movwf	Set_PORTB_as_output@port^0,c
  1443  000D38                     
  1444                           ;GPIO.c: 15:     TRISB &= ~(1 << port);
  1445  000D38  C032  F030         	movff	Set_PORTB_as_output@port,??_Set_PORTB_as_output
  1446  000D3C  0E01               	movlw	1
  1447  000D3E  6E31               	movwf	(??_Set_PORTB_as_output+1)^0,c
  1448  000D40  2A30               	incf	??_Set_PORTB_as_output^0,f,c
  1449  000D42  EFA5  F006         	goto	u114
  1450  000D46                     u115:
  1451  000D46  90D8               	bcf	status,0,c
  1452  000D48  3631               	rlcf	(??_Set_PORTB_as_output+1)^0,f,c
  1453  000D4A                     u114:
  1454  000D4A  2E30               	decfsz	??_Set_PORTB_as_output^0,f,c
  1455  000D4C  EFA3  F006         	goto	u115
  1456  000D50  5031               	movf	(??_Set_PORTB_as_output+1)^0,w,c
  1457  000D52  0AFF               	xorlw	255
  1458  000D54  1693               	andwf	147,f,c	;volatile
  1459  000D56  0012               	return		;funcret
  1460  000D58                     __end_of_Set_PORTB_as_output:
  1461                           	callstack 0
  1462                           
  1463 ;; *************** function _Set_PORTB_as_input *****************
  1464 ;; Defined at:
  1465 ;;		line 5 in file "GPIO.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  port            1    wreg     unsigned char 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  port            1   49[COMRAM] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1479 ;;      Params:         0       0       0       0       0
  1480 ;;      Locals:         1       0       0       0       0
  1481 ;;      Temps:          2       0       0       0       0
  1482 ;;      Totals:         3       0       0       0       0
  1483 ;;Total ram usage:        3 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    7
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_GPIO_Setup
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text11
  1494  000D7A                     __ptext11:
  1495                           	callstack 0
  1496  000D7A                     _Set_PORTB_as_input:
  1497                           	callstack 22
  1498                           
  1499                           ;incstack = 0
  1500                           ;Set_PORTB_as_input@port stored from wreg
  1501  000D7A  6E32               	movwf	Set_PORTB_as_input@port^0,c
  1502  000D7C                     
  1503                           ;GPIO.c: 7:     TRISB |= 1 << port;
  1504  000D7C  C032  F030         	movff	Set_PORTB_as_input@port,??_Set_PORTB_as_input
  1505  000D80  0E01               	movlw	1
  1506  000D82  6E31               	movwf	(??_Set_PORTB_as_input+1)^0,c
  1507  000D84  2A30               	incf	??_Set_PORTB_as_input^0,f,c
  1508  000D86  EFC7  F006         	goto	u94
  1509  000D8A                     u95:
  1510  000D8A  90D8               	bcf	status,0,c
  1511  000D8C  3631               	rlcf	(??_Set_PORTB_as_input+1)^0,f,c
  1512  000D8E                     u94:
  1513  000D8E  2E30               	decfsz	??_Set_PORTB_as_input^0,f,c
  1514  000D90  EFC5  F006         	goto	u95
  1515  000D94  5031               	movf	(??_Set_PORTB_as_input+1)^0,w,c
  1516  000D96  1293               	iorwf	147,f,c	;volatile
  1517  000D98  0012               	return		;funcret
  1518  000D9A                     __end_of_Set_PORTB_as_input:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _Set_PORTA_as_output *****************
  1522 ;; Defined at:
  1523 ;;		line 10 in file "GPIO.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  port            1    wreg     unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  port            1   49[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1537 ;;      Params:         0       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0
  1539 ;;      Temps:          2       0       0       0       0
  1540 ;;      Totals:         3       0       0       0       0
  1541 ;;Total ram usage:        3 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    7
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_GPIO_Setup
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text12
  1552  000D58                     __ptext12:
  1553                           	callstack 0
  1554  000D58                     _Set_PORTA_as_output:
  1555                           	callstack 22
  1556                           
  1557                           ;incstack = 0
  1558                           ;Set_PORTA_as_output@port stored from wreg
  1559  000D58  6E32               	movwf	Set_PORTA_as_output@port^0,c
  1560  000D5A                     
  1561                           ;GPIO.c: 11:     TRISA &= ~(1 << port);
  1562  000D5A  C032  F030         	movff	Set_PORTA_as_output@port,??_Set_PORTA_as_output
  1563  000D5E  0E01               	movlw	1
  1564  000D60  6E31               	movwf	(??_Set_PORTA_as_output+1)^0,c
  1565  000D62  2A30               	incf	??_Set_PORTA_as_output^0,f,c
  1566  000D64  EFB6  F006         	goto	u104
  1567  000D68                     u105:
  1568  000D68  90D8               	bcf	status,0,c
  1569  000D6A  3631               	rlcf	(??_Set_PORTA_as_output+1)^0,f,c
  1570  000D6C                     u104:
  1571  000D6C  2E30               	decfsz	??_Set_PORTA_as_output^0,f,c
  1572  000D6E  EFB4  F006         	goto	u105
  1573  000D72  5031               	movf	(??_Set_PORTA_as_output+1)^0,w,c
  1574  000D74  0AFF               	xorlw	255
  1575  000D76  1692               	andwf	146,f,c	;volatile
  1576  000D78  0012               	return		;funcret
  1577  000D7A                     __end_of_Set_PORTA_as_output:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _EUSART_Turn_RX_ON *****************
  1581 ;; Defined at:
  1582 ;;		line 11 in file "EUSART.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		None
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    7
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text13
  1611  000DF6                     __ptext13:
  1612                           	callstack 0
  1613  000DF6                     _EUSART_Turn_RX_ON:
  1614                           	callstack 23
  1615  000DF6                     
  1616                           ;EUSART.c: 12:     RCSTAbits.CREN = 1;
  1617  000DF6  88AB               	bsf	171,4,c	;volatile
  1618  000DF8  0012               	return		;funcret
  1619  000DFA                     __end_of_EUSART_Turn_RX_ON:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _Timers *****************
  1623 ;; Defined at:
  1624 ;;		line 62 in file "Task_main.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1638 ;;      Params:         0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0
  1640 ;;      Temps:          5       0       0       0       0
  1641 ;;      Totals:         5       0       0       0       0
  1642 ;;Total ram usage:        5 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    6
  1645 ;; This function calls:
  1646 ;;		_LED_Controller_Switch_Left
  1647 ;;		_LED_Controller_Switch_Right
  1648 ;;		___wmul
  1649 ;; This function is called by:
  1650 ;;		Interrupt level 1
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	intcodelo
  1655  000018                     __pintcodelo:
  1656                           	callstack 0
  1657  000018                     _Timers:
  1658                           	callstack 22
  1659                           
  1660                           ;incstack = 0
  1661  000018  8042               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1662  00001A  CFD8 F02B          	movff	status,??_Timers
  1663  00001E  CFE8 F02C          	movff	wreg,??_Timers+1
  1664  000022  CFE0 F02D          	movff	bsr,??_Timers+2
  1665  000026  CFF3 F02E          	movff	prodl,??_Timers+3
  1666  00002A  CFF4 F02F          	movff	prodh,??_Timers+4
  1667  00002E                     
  1668                           ;Task_main.c: 67:     if (INTCONbits.TMR0IF){
  1669  00002E  A4F2               	btfss	242,2,c	;volatile
  1670  000030  EF1C  F000         	goto	i1u66_21
  1671  000034  EF1E  F000         	goto	i1u66_20
  1672  000038                     i1u66_21:
  1673  000038  EF4B  F000         	goto	i1l1879
  1674  00003C                     i1u66_20:
  1675  00003C                     
  1676                           ;Task_main.c: 68:         Timer_counter++;
  1677  00003C  4A3F               	infsnz	_Timer_counter^0,f,c
  1678  00003E  2A40               	incf	(_Timer_counter+1)^0,f,c
  1679  000040                     
  1680                           ;Task_main.c: 69:         if(Timer_counter >= 500*Timer_multiplier){
  1681  000040  C03E  F020         	movff	_Timer_multiplier,___wmul@multiplier
  1682  000044  6A21               	clrf	(___wmul@multiplier+1)^0,c
  1683  000046  0E01               	movlw	1
  1684  000048  6E23               	movwf	(___wmul@multiplicand+1)^0,c
  1685  00004A  0EF4               	movlw	244
  1686  00004C  6E22               	movwf	___wmul@multiplicand^0,c
  1687  00004E  EC88  F006         	call	___wmul	;wreg free
  1688  000052  5020               	movf	?___wmul^0,w,c
  1689  000054  5C3F               	subwf	_Timer_counter^0,w,c
  1690  000056  5021               	movf	(?___wmul+1)^0,w,c
  1691  000058  5840               	subwfb	(_Timer_counter+1)^0,w,c
  1692  00005A  A0D8               	btfss	status,0,c
  1693  00005C  EF32  F000         	goto	i1u67_21
  1694  000060  EF34  F000         	goto	i1u67_20
  1695  000064                     i1u67_21:
  1696  000064  EF4A  F000         	goto	i1l1877
  1697  000068                     i1u67_20:
  1698  000068                     
  1699                           ;Task_main.c: 70:             if(Direction){
  1700  000068  503D               	movf	_Direction^0,w,c
  1701  00006A  B4D8               	btfsc	status,2,c
  1702  00006C  EF3A  F000         	goto	i1u68_21
  1703  000070  EF3C  F000         	goto	i1u68_20
  1704  000074                     i1u68_21:
  1705  000074  EF42  F000         	goto	i1l1873
  1706  000078                     i1u68_20:
  1707  000078                     
  1708                           ;Task_main.c: 71:                 Current_LED = LED_Controller_Switch_Right (Current_LED
      +                          );
  1709  000078  503C               	movf	_Current_LED^0,w,c
  1710  00007A  EC42  F004         	call	_LED_Controller_Switch_Right
  1711  00007E  6E3C               	movwf	_Current_LED^0,c
  1712                           
  1713                           ;Task_main.c: 72:             }
  1714  000080  EF46  F000         	goto	i1l1875
  1715  000084                     i1l1873:
  1716                           
  1717                           ;Task_main.c: 74:                 Current_LED = LED_Controller_Switch_Left (Current_LED)
      +                          ;
  1718  000084  503C               	movf	_Current_LED^0,w,c
  1719  000086  ECDC  F003         	call	_LED_Controller_Switch_Left
  1720  00008A  6E3C               	movwf	_Current_LED^0,c
  1721  00008C                     i1l1875:
  1722                           
  1723                           ;Task_main.c: 76:             Timer_counter = 0;
  1724  00008C  0E00               	movlw	0
  1725  00008E  6E40               	movwf	(_Timer_counter+1)^0,c
  1726  000090  0E00               	movlw	0
  1727  000092  6E3F               	movwf	_Timer_counter^0,c
  1728  000094                     i1l1877:
  1729                           
  1730                           ;Task_main.c: 78:         INTCONbits.TMR0IF = 0;
  1731  000094  94F2               	bcf	242,2,c	;volatile
  1732  000096                     i1l1879:
  1733                           
  1734                           ;Task_main.c: 82:     if(INTCONbits.RBIF){
  1735  000096  A0F2               	btfss	242,0,c	;volatile
  1736  000098  EF50  F000         	goto	i1u69_21
  1737  00009C  EF52  F000         	goto	i1u69_20
  1738  0000A0                     i1u69_21:
  1739  0000A0  EF55  F000         	goto	i1l62
  1740  0000A4                     i1u69_20:
  1741  0000A4                     
  1742                           ;Task_main.c: 83:         Direction ^= 1;
  1743  0000A4  0E01               	movlw	1
  1744  0000A6  1A3D               	xorwf	_Direction^0,f,c
  1745  0000A8                     
  1746                           ;Task_main.c: 84:         INTCONbits.RBIF = 0;
  1747  0000A8  90F2               	bcf	242,0,c	;volatile
  1748  0000AA                     i1l62:
  1749  0000AA  C02F  FFF4         	movff	??_Timers+4,prodh
  1750  0000AE  C02E  FFF3         	movff	??_Timers+3,prodl
  1751  0000B2  C02D  FFE0         	movff	??_Timers+2,bsr
  1752  0000B6  C02C  FFE8         	movff	??_Timers+1,wreg
  1753  0000BA  C02B  FFD8         	movff	??_Timers,status
  1754  0000BE  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1755  0000C0  0010               	retfie	
  1756  0000C2                     __end_of_Timers:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function ___wmul *****************
  1760 ;; Defined at:
  1761 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  multiplier      2   31[COMRAM] unsigned int 
  1764 ;;  multiplicand    2   33[COMRAM] unsigned int 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  product         2   35[COMRAM] unsigned int 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2   31[COMRAM] unsigned int 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, prodl, prodh
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1776 ;;      Params:         4       0       0       0       0
  1777 ;;      Locals:         2       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0
  1779 ;;      Totals:         6       0       0       0       0
  1780 ;;Total ram usage:        6 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    4
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_Timers
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text15
  1791  000D10                     __ptext15:
  1792                           	callstack 0
  1793  000D10                     ___wmul:
  1794                           	callstack 23
  1795  000D10  5020               	movf	___wmul@multiplier^0,w,c
  1796  000D12  0222               	mulwf	___wmul@multiplicand^0,c
  1797  000D14  CFF3 F024          	movff	prodl,___wmul@product
  1798  000D18  CFF4 F025          	movff	prodh,___wmul@product+1
  1799  000D1C  5020               	movf	___wmul@multiplier^0,w,c
  1800  000D1E  0223               	mulwf	(___wmul@multiplicand+1)^0,c
  1801  000D20  50F3               	movf	243,w,c
  1802  000D22  2625               	addwf	(___wmul@product+1)^0,f,c
  1803  000D24  5021               	movf	(___wmul@multiplier+1)^0,w,c
  1804  000D26  0222               	mulwf	___wmul@multiplicand^0,c
  1805  000D28  50F3               	movf	243,w,c
  1806  000D2A  2625               	addwf	(___wmul@product+1)^0,f,c
  1807  000D2C  C024  F020         	movff	___wmul@product,?___wmul
  1808  000D30  C025  F021         	movff	___wmul@product+1,?___wmul+1
  1809  000D34  0012               	return		;funcret
  1810  000D36                     __end_of___wmul:
  1811                           	callstack 0
  1812                           
  1813 ;; *************** function _LED_Controller_Switch_Right *****************
  1814 ;; Defined at:
  1815 ;;		line 3 in file "LED_controller.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  current_led     1    wreg     unsigned char 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  current_led     1   41[COMRAM] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      unsigned char 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1829 ;;      Params:         0       0       0       0       0
  1830 ;;      Locals:         1       0       0       0       0
  1831 ;;      Temps:          2       0       0       0       0
  1832 ;;      Totals:         3       0       0       0       0
  1833 ;;Total ram usage:        3 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    5
  1836 ;; This function calls:
  1837 ;;		i1_EUSART_Turn_TX_ON
  1838 ;;		i1_strcpy
  1839 ;; This function is called by:
  1840 ;;		_Timers
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text16
  1845  000884                     __ptext16:
  1846                           	callstack 0
  1847  000884                     _LED_Controller_Switch_Right:
  1848                           	callstack 22
  1849                           
  1850                           ;incstack = 0
  1851                           ;LED_Controller_Switch_Right@current_led stored from wreg
  1852  000884  6E2A               	movwf	LED_Controller_Switch_Right@current_led^0,c
  1853  000886                     
  1854                           ;LED_controller.c: 4:     switch (current_led){
  1855  000886  EF6F  F004         	goto	i1l1721
  1856  00088A                     i1l242:
  1857                           
  1858                           ;LED_controller.c: 6:             PORTAbits.RA0 = 0; PORTAbits.RA1 = 1; return current_l
      +                          ed+1;
  1859  00088A  9080               	bcf	128,0,c	;volatile
  1860  00088C  8280               	bsf	128,1,c	;volatile
  1861  00088E                     i1l1633:
  1862  00088E  282A               	incf	LED_Controller_Switch_Right@current_led^0,w,c
  1863  000890  EFA4  F004         	goto	i1l243
  1864  000894                     i1l245:
  1865                           
  1866                           ;LED_controller.c: 11:             PORTAbits.RA1 = 0; PORTAbits.RA2 = 1; return current_
      +                          led+1;
  1867  000894  9280               	bcf	128,1,c	;volatile
  1868  000896  8480               	bsf	128,2,c	;volatile
  1869  000898  EF47  F004         	goto	i1l1633
  1870  00089C                     i1l246:
  1871                           
  1872                           ;LED_controller.c: 16:             PORTAbits.RA2 = 0; PORTAbits.RA3 = 1; return current_
      +                          led+1;
  1873  00089C  9480               	bcf	128,2,c	;volatile
  1874  00089E  8680               	bsf	128,3,c	;volatile
  1875  0008A0  EF47  F004         	goto	i1l1633
  1876  0008A4                     i1l247:
  1877                           
  1878                           ;LED_controller.c: 21:             PORTAbits.RA3 = 0; PORTAbits.RA5 = 1; return current_
      +                          led+1;
  1879  0008A4  9680               	bcf	128,3,c	;volatile
  1880  0008A6  8A80               	bsf	128,5,c	;volatile
  1881  0008A8  EF47  F004         	goto	i1l1633
  1882  0008AC                     i1l248:
  1883                           
  1884                           ;LED_controller.c: 26:             PORTAbits.RA5 = 0; PORTBbits.RB0 = 1; return current_
      +                          led+1;
  1885  0008AC  9A80               	bcf	128,5,c	;volatile
  1886  0008AE  8081               	bsf	129,0,c	;volatile
  1887  0008B0  EF47  F004         	goto	i1l1633
  1888  0008B4                     i1l249:
  1889                           
  1890                           ;LED_controller.c: 31:             PORTBbits.RB0 = 0; PORTBbits.RB1 = 1; return current_
      +                          led+1;
  1891  0008B4  9081               	bcf	129,0,c	;volatile
  1892  0008B6  8281               	bsf	129,1,c	;volatile
  1893  0008B8  EF47  F004         	goto	i1l1633
  1894  0008BC                     i1l250:
  1895                           
  1896                           ;LED_controller.c: 36:             PORTBbits.RB1 = 0; PORTBbits.RB2 = 1; return current_
      +                          led+1;
  1897  0008BC  9281               	bcf	129,1,c	;volatile
  1898  0008BE  8481               	bsf	129,2,c	;volatile
  1899  0008C0  EF47  F004         	goto	i1l1633
  1900  0008C4                     i1l251:
  1901                           
  1902                           ;LED_controller.c: 41:             PORTBbits.RB2 = 0; PORTBbits.RB3 = 1; return current_
      +                          led+1;
  1903  0008C4  9481               	bcf	129,2,c	;volatile
  1904  0008C6  8681               	bsf	129,3,c	;volatile
  1905  0008C8  EF47  F004         	goto	i1l1633
  1906  0008CC                     i1l252:
  1907                           
  1908                           ;LED_controller.c: 46:             PORTBbits.RB3 = 0; PORTBbits.RB4 = 1; return current_
      +                          led+1;
  1909  0008CC  9681               	bcf	129,3,c	;volatile
  1910  0008CE  8881               	bsf	129,4,c	;volatile
  1911  0008D0  EF47  F004         	goto	i1l1633
  1912  0008D4                     i1l253:
  1913                           
  1914                           ;LED_controller.c: 51:             PORTBbits.RB4 = 0; PORTAbits.RA0 = 1; return 1;
  1915  0008D4  9881               	bcf	129,4,c	;volatile
  1916  0008D6  8080               	bsf	128,0,c	;volatile
  1917  0008D8                     i1l1705:
  1918  0008D8  0E01               	movlw	1
  1919  0008DA  EFA4  F004         	goto	i1l243
  1920  0008DE                     i1l1721:
  1921  0008DE  502A               	movf	LED_Controller_Switch_Right@current_led^0,w,c
  1922  0008E0  6E28               	movwf	??_LED_Controller_Switch_Right^0,c
  1923  0008E2  6A29               	clrf	(??_LED_Controller_Switch_Right+1)^0,c
  1924                           
  1925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1926                           ; Switch size 1, requested type "simple"
  1927                           ; Number of cases is 1, Range of values is 0 to 0
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte            4     3 (average)
  1931                           ;	Chosen strategy is simple_byte
  1932  0008E4  5029               	movf	(??_LED_Controller_Switch_Right+1)^0,w,c
  1933  0008E6  0A00               	xorlw	0	; case 0
  1934  0008E8  B4D8               	btfsc	status,2,c
  1935  0008EA  EF79  F004         	goto	i1l1915
  1936  0008EE  EF6C  F004         	goto	i1l1705
  1937  0008F2                     i1l1915:
  1938                           
  1939                           ; Switch size 1, requested type "simple"
  1940                           ; Number of cases is 10, Range of values is 1 to 10
  1941                           ; switch strategies available:
  1942                           ; Name         Instructions Cycles
  1943                           ; simple_byte           31    16 (average)
  1944                           ;	Chosen strategy is simple_byte
  1945  0008F2  5028               	movf	??_LED_Controller_Switch_Right^0,w,c
  1946  0008F4  0A01               	xorlw	1	; case 1
  1947  0008F6  B4D8               	btfsc	status,2,c
  1948  0008F8  EF45  F004         	goto	i1l242
  1949  0008FC  0A03               	xorlw	3	; case 2
  1950  0008FE  B4D8               	btfsc	status,2,c
  1951  000900  EF4A  F004         	goto	i1l245
  1952  000904  0A01               	xorlw	1	; case 3
  1953  000906  B4D8               	btfsc	status,2,c
  1954  000908  EF4E  F004         	goto	i1l246
  1955  00090C  0A07               	xorlw	7	; case 4
  1956  00090E  B4D8               	btfsc	status,2,c
  1957  000910  EF52  F004         	goto	i1l247
  1958  000914  0A01               	xorlw	1	; case 5
  1959  000916  B4D8               	btfsc	status,2,c
  1960  000918  EF56  F004         	goto	i1l248
  1961  00091C  0A03               	xorlw	3	; case 6
  1962  00091E  B4D8               	btfsc	status,2,c
  1963  000920  EF5A  F004         	goto	i1l249
  1964  000924  0A01               	xorlw	1	; case 7
  1965  000926  B4D8               	btfsc	status,2,c
  1966  000928  EF5E  F004         	goto	i1l250
  1967  00092C  0A0F               	xorlw	15	; case 8
  1968  00092E  B4D8               	btfsc	status,2,c
  1969  000930  EF62  F004         	goto	i1l251
  1970  000934  0A01               	xorlw	1	; case 9
  1971  000936  B4D8               	btfsc	status,2,c
  1972  000938  EF66  F004         	goto	i1l252
  1973  00093C  0A03               	xorlw	3	; case 10
  1974  00093E  B4D8               	btfsc	status,2,c
  1975  000940  EF6A  F004         	goto	i1l253
  1976  000944  EF6C  F004         	goto	i1l1705
  1977  000948                     i1l243:
  1978  000948  0012               	return		;funcret
  1979  00094A                     __end_of_LED_Controller_Switch_Right:
  1980                           	callstack 0
  1981                           
  1982 ;; *************** function _LED_Controller_Switch_Left *****************
  1983 ;; Defined at:
  1984 ;;		line 61 in file "LED_controller.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  current_led     1    wreg     unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  current_led     1   41[COMRAM] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      unsigned char 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1998 ;;      Params:         0       0       0       0       0
  1999 ;;      Locals:         1       0       0       0       0
  2000 ;;      Temps:          2       0       0       0       0
  2001 ;;      Totals:         3       0       0       0       0
  2002 ;;Total ram usage:        3 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    5
  2005 ;; This function calls:
  2006 ;;		i1_EUSART_Turn_TX_ON
  2007 ;;		i1_strcpy
  2008 ;; This function is called by:
  2009 ;;		_Timers
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text17
  2014  0007B8                     __ptext17:
  2015                           	callstack 0
  2016  0007B8                     _LED_Controller_Switch_Left:
  2017                           	callstack 22
  2018                           
  2019                           ;incstack = 0
  2020                           ;LED_Controller_Switch_Left@current_led stored from wreg
  2021  0007B8  6E2A               	movwf	LED_Controller_Switch_Left@current_led^0,c
  2022  0007BA                     
  2023                           ;LED_controller.c: 62:     switch (current_led){
  2024  0007BA  EF0C  F004         	goto	i1l1817
  2025  0007BE                     i1l258:
  2026                           
  2027                           ;LED_controller.c: 64:             PORTAbits.RA0 = 0; PORTBbits.RB4 = 1; return 10;
  2028  0007BE  9080               	bcf	128,0,c	;volatile
  2029  0007C0  8881               	bsf	129,4,c	;volatile
  2030  0007C2  0E0A               	movlw	10
  2031  0007C4  EF41  F004         	goto	i1l259
  2032  0007C8                     i1l261:
  2033                           
  2034                           ;LED_controller.c: 69:             PORTAbits.RA1 = 0; PORTAbits.RA0 = 1; return current_
      +                          led-1;
  2035  0007C8  9280               	bcf	128,1,c	;volatile
  2036  0007CA  8080               	bsf	128,0,c	;volatile
  2037  0007CC                     i1l1737:
  2038  0007CC  042A               	decf	LED_Controller_Switch_Left@current_led^0,w,c
  2039  0007CE  EF41  F004         	goto	i1l259
  2040  0007D2                     i1l262:
  2041                           
  2042                           ;LED_controller.c: 74:             PORTAbits.RA2 = 0; PORTAbits.RA1 = 1; return current_
      +                          led-1;
  2043  0007D2  9480               	bcf	128,2,c	;volatile
  2044  0007D4  8280               	bsf	128,1,c	;volatile
  2045  0007D6  EFE6  F003         	goto	i1l1737
  2046  0007DA                     i1l263:
  2047                           
  2048                           ;LED_controller.c: 79:             PORTAbits.RA3 = 0; PORTAbits.RA2 = 1; return current_
      +                          led-1;
  2049  0007DA  9680               	bcf	128,3,c	;volatile
  2050  0007DC  8480               	bsf	128,2,c	;volatile
  2051  0007DE  EFE6  F003         	goto	i1l1737
  2052  0007E2                     i1l264:
  2053                           
  2054                           ;LED_controller.c: 84:             PORTAbits.RA5 = 0; PORTAbits.RA3 = 1; return current_
      +                          led-1;
  2055  0007E2  9A80               	bcf	128,5,c	;volatile
  2056  0007E4  8680               	bsf	128,3,c	;volatile
  2057  0007E6  EFE6  F003         	goto	i1l1737
  2058  0007EA                     i1l265:
  2059                           
  2060                           ;LED_controller.c: 89:             PORTBbits.RB0 = 0; PORTAbits.RA5 = 1; return current_
      +                          led-1;
  2061  0007EA  9081               	bcf	129,0,c	;volatile
  2062  0007EC  8A80               	bsf	128,5,c	;volatile
  2063  0007EE  EFE6  F003         	goto	i1l1737
  2064  0007F2                     i1l266:
  2065                           
  2066                           ;LED_controller.c: 94:             PORTBbits.RB1 = 0; PORTBbits.RB0 = 1; return current_
      +                          led-1;
  2067  0007F2  9281               	bcf	129,1,c	;volatile
  2068  0007F4  8081               	bsf	129,0,c	;volatile
  2069  0007F6  EFE6  F003         	goto	i1l1737
  2070  0007FA                     i1l267:
  2071                           
  2072                           ;LED_controller.c: 99:             PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; return current_
      +                          led-1;
  2073  0007FA  9481               	bcf	129,2,c	;volatile
  2074  0007FC  8281               	bsf	129,1,c	;volatile
  2075  0007FE  EFE6  F003         	goto	i1l1737
  2076  000802                     i1l268:
  2077                           
  2078                           ;LED_controller.c: 104:             PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; return current
      +                          _led-1;
  2079  000802  9681               	bcf	129,3,c	;volatile
  2080  000804  8481               	bsf	129,2,c	;volatile
  2081  000806  EFE6  F003         	goto	i1l1737
  2082  00080A                     i1l269:
  2083                           
  2084                           ;LED_controller.c: 109:             PORTBbits.RB4 = 0; PORTBbits.RB3 = 1; return current
      +                          _led-1;
  2085  00080A  9881               	bcf	129,4,c	;volatile
  2086  00080C  8681               	bsf	129,3,c	;volatile
  2087  00080E  EFE6  F003         	goto	i1l1737
  2088  000812                     i1l1809:
  2089                           
  2090                           ;LED_controller.c: 114:             return 1;
  2091  000812  0E01               	movlw	1
  2092  000814  EF41  F004         	goto	i1l259
  2093  000818                     i1l1817:
  2094  000818  502A               	movf	LED_Controller_Switch_Left@current_led^0,w,c
  2095  00081A  6E28               	movwf	??_LED_Controller_Switch_Left^0,c
  2096  00081C  6A29               	clrf	(??_LED_Controller_Switch_Left+1)^0,c
  2097                           
  2098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2099                           ; Switch size 1, requested type "simple"
  2100                           ; Number of cases is 1, Range of values is 0 to 0
  2101                           ; switch strategies available:
  2102                           ; Name         Instructions Cycles
  2103                           ; simple_byte            4     3 (average)
  2104                           ;	Chosen strategy is simple_byte
  2105  00081E  5029               	movf	(??_LED_Controller_Switch_Left+1)^0,w,c
  2106  000820  0A00               	xorlw	0	; case 0
  2107  000822  B4D8               	btfsc	status,2,c
  2108  000824  EF16  F004         	goto	i1l1917
  2109  000828  EF09  F004         	goto	i1l1809
  2110  00082C                     i1l1917:
  2111                           
  2112                           ; Switch size 1, requested type "simple"
  2113                           ; Number of cases is 10, Range of values is 1 to 10
  2114                           ; switch strategies available:
  2115                           ; Name         Instructions Cycles
  2116                           ; simple_byte           31    16 (average)
  2117                           ;	Chosen strategy is simple_byte
  2118  00082C  5028               	movf	??_LED_Controller_Switch_Left^0,w,c
  2119  00082E  0A01               	xorlw	1	; case 1
  2120  000830  B4D8               	btfsc	status,2,c
  2121  000832  EFDF  F003         	goto	i1l258
  2122  000836  0A03               	xorlw	3	; case 2
  2123  000838  B4D8               	btfsc	status,2,c
  2124  00083A  EFE4  F003         	goto	i1l261
  2125  00083E  0A01               	xorlw	1	; case 3
  2126  000840  B4D8               	btfsc	status,2,c
  2127  000842  EFE9  F003         	goto	i1l262
  2128  000846  0A07               	xorlw	7	; case 4
  2129  000848  B4D8               	btfsc	status,2,c
  2130  00084A  EFED  F003         	goto	i1l263
  2131  00084E  0A01               	xorlw	1	; case 5
  2132  000850  B4D8               	btfsc	status,2,c
  2133  000852  EFF1  F003         	goto	i1l264
  2134  000856  0A03               	xorlw	3	; case 6
  2135  000858  B4D8               	btfsc	status,2,c
  2136  00085A  EFF5  F003         	goto	i1l265
  2137  00085E  0A01               	xorlw	1	; case 7
  2138  000860  B4D8               	btfsc	status,2,c
  2139  000862  EFF9  F003         	goto	i1l266
  2140  000866  0A0F               	xorlw	15	; case 8
  2141  000868  B4D8               	btfsc	status,2,c
  2142  00086A  EFFD  F003         	goto	i1l267
  2143  00086E  0A01               	xorlw	1	; case 9
  2144  000870  B4D8               	btfsc	status,2,c
  2145  000872  EF01  F004         	goto	i1l268
  2146  000876  0A03               	xorlw	3	; case 10
  2147  000878  B4D8               	btfsc	status,2,c
  2148  00087A  EF05  F004         	goto	i1l269
  2149  00087E  EF09  F004         	goto	i1l1809
  2150  000882                     i1l259:
  2151  000882  0012               	return		;funcret
  2152  000884                     __end_of_LED_Controller_Switch_Left:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function i1_strcpy *****************
  2156 ;; Defined at:
  2157 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  dest            2   31[COMRAM] PTR unsigned char 
  2160 ;;		 -> Transmit_Buffer(64), 
  2161 ;;  src             2   33[COMRAM] PTR const unsigned char 
  2162 ;;		 -> STR_22(12), STR_21(12), STR_20(12), STR_19(12), 
  2163 ;;		 -> STR_18(12), STR_17(12), STR_16(12), STR_15(12), 
  2164 ;;		 -> STR_14(12), STR_13(13), STR_12(12), STR_11(13), 
  2165 ;;		 -> STR_10(12), STR_9(12), STR_8(12), STR_7(12), 
  2166 ;;		 -> STR_6(12), STR_5(12), STR_4(12), STR_3(12), 
  2167 ;;		 -> STR_1(30), 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  d               2   37[COMRAM] PTR unsigned char 
  2170 ;;		 -> Transmit_Buffer(64), 
  2171 ;;  s               2   35[COMRAM] PTR const unsigned char 
  2172 ;;		 -> STR_22(12), STR_21(12), STR_20(12), STR_19(12), 
  2173 ;;		 -> STR_18(12), STR_17(12), STR_16(12), STR_15(12), 
  2174 ;;		 -> STR_14(12), STR_13(13), STR_12(12), STR_11(13), 
  2175 ;;		 -> STR_10(12), STR_9(12), STR_8(12), STR_7(12), 
  2176 ;;		 -> STR_6(12), STR_5(12), STR_4(12), STR_3(12), 
  2177 ;;		 -> STR_1(30), 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  2   31[COMRAM] PTR unsigned char 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2187 ;;      Params:         4       0       0       0       0
  2188 ;;      Locals:         4       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0
  2190 ;;      Totals:         8       0       0       0       0
  2191 ;;Total ram usage:        8 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    4
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_LED_Controller_Switch_Right
  2198 ;;		_LED_Controller_Switch_Left
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text18
  2203  000C5A                     __ptext18:
  2204                           	callstack 0
  2205  000C5A                     i1_strcpy:
  2206                           	callstack 22
  2207  000C5A  C022  F024         	movff	i1strcpy@src,i1strcpy@s
  2208  000C5E  C023  F025         	movff	i1strcpy@src+1,i1strcpy@s+1
  2209  000C62  C020  F026         	movff	i1strcpy@dest,i1strcpy@d
  2210  000C66  C021  F027         	movff	i1strcpy@dest+1,i1strcpy@d+1
  2211  000C6A                     i1l1581:
  2212  000C6A  C024  FFF6         	movff	i1strcpy@s,tblptrl
  2213  000C6E  C025  FFF7         	movff	i1strcpy@s+1,tblptrh
  2214  000C72  4A24               	infsnz	i1strcpy@s^0,f,c
  2215  000C74  2A25               	incf	(i1strcpy@s+1)^0,f,c
  2216  000C76                     	if	0	;tblptru may be non-zero
  2217  000C76                     	endif
  2218  000C76                     	if	0	;tblptru may be non-zero
  2219  000C76                     	endif
  2220  000C76  C026  FFD9         	movff	i1strcpy@d,fsr2l
  2221  000C7A  C027  FFDA         	movff	i1strcpy@d+1,fsr2h
  2222  000C7E  4A26               	infsnz	i1strcpy@d^0,f,c
  2223  000C80  2A27               	incf	(i1strcpy@d+1)^0,f,c
  2224  000C82  0008               	tblrd		*
  2225  000C84  CFF5 FFDF          	movff	tablat,indf2
  2226  000C88  50DF               	movf	indf2,w,c
  2227  000C8A  A4D8               	btfss	status,2,c
  2228  000C8C  EF4A  F006         	goto	i1u52_21
  2229  000C90  EF4C  F006         	goto	i1u52_20
  2230  000C94                     i1u52_21:
  2231  000C94  EF35  F006         	goto	i1l1581
  2232  000C98                     i1u52_20:
  2233  000C98  0012               	return		;funcret
  2234  000C9A                     __end_ofi1_strcpy:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function i1_EUSART_Turn_TX_ON *****************
  2238 ;; Defined at:
  2239 ;;		line 3 in file "EUSART.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		None
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2253 ;;      Params:         0       0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0
  2256 ;;      Totals:         0       0       0       0       0
  2257 ;;Total ram usage:        0 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    4
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_LED_Controller_Switch_Right
  2264 ;;		_LED_Controller_Switch_Left
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text19
  2269  000DFA                     __ptext19:
  2270                           	callstack 0
  2271  000DFA                     i1_EUSART_Turn_TX_ON:
  2272                           	callstack 22
  2273  000DFA                     
  2274                           ;EUSART.c: 4:     TXSTAbits.TXEN = 1;
  2275  000DFA  8AAC               	bsf	172,5,c	;volatile
  2276  000DFC  0012               	return		;funcret
  2277  000DFE                     __end_ofi1_EUSART_Turn_TX_ON:
  2278                           	callstack 0
  2279                           
  2280 ;; *************** function _RX_TX *****************
  2281 ;; Defined at:
  2282 ;;		line 43 in file "Task_main.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  temp            1   30[COMRAM] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2296 ;;      Params:         0       0       0       0       0
  2297 ;;      Locals:         1       0       0       0       0
  2298 ;;      Temps:          8       0       0       0       0
  2299 ;;      Totals:         9       0       0       0       0
  2300 ;;Total ram usage:        9 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    3
  2303 ;; This function calls:
  2304 ;;		_EUSART_Analize_data
  2305 ;;		_EUSART_Receive
  2306 ;;		_EUSART_Transmit
  2307 ;;		_EUSART_Turn_TX_OFF
  2308 ;; This function is called by:
  2309 ;;		Interrupt level 2
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	intcode
  2314  000008                     __pintcode:
  2315                           	callstack 0
  2316  000008                     _RX_TX:
  2317                           	callstack 22
  2318                           
  2319                           ;incstack = 0
  2320  000008  8242               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2321  00000A  EF05  F005         	goto	int_func
  2322                           
  2323                           	psect	intcode_body
  2324  000A0A                     __pintcode_body:
  2325                           	callstack 22
  2326  000A0A                     int_func:
  2327                           	callstack 22
  2328  000A0A  CFD9 F017          	movff	fsr2l,??_RX_TX
  2329  000A0E  CFDA F018          	movff	fsr2h,??_RX_TX+1
  2330  000A12  CFF3 F019          	movff	prodl,??_RX_TX+2
  2331  000A16  CFF4 F01A          	movff	prodh,??_RX_TX+3
  2332  000A1A  CFF6 F01B          	movff	tblptrl,??_RX_TX+4
  2333  000A1E  CFF7 F01C          	movff	tblptrh,??_RX_TX+5
  2334  000A22  CFF8 F01D          	movff	tblptru,??_RX_TX+6
  2335  000A26  CFF5 F01E          	movff	tablat,??_RX_TX+7
  2336  000A2A                     
  2337                           ;Task_main.c: 44:     unsigned char temp;;Task_main.c: 45:     if(PIR1bits.TXIF){
  2338  000A2A  A89E               	btfss	158,4,c	;volatile
  2339  000A2C  EF1A  F005         	goto	i2u63_41
  2340  000A30  EF1C  F005         	goto	i2u63_40
  2341  000A34                     i2u63_41:
  2342  000A34  EF26  F005         	goto	i2l1853
  2343  000A38                     i2u63_40:
  2344  000A38                     
  2345                           ;Task_main.c: 47:         EUSART_Transmit(sizeof(Transmit_Buffer), TX_pointer);
  2346  000A38  C03A  F001         	movff	_TX_pointer,EUSART_Transmit@buffer
  2347  000A3C  C03B  F002         	movff	_TX_pointer+1,EUSART_Transmit@buffer+1
  2348  000A40  0E40               	movlw	64
  2349  000A42  EC4F  F005         	call	_EUSART_Transmit
  2350  000A46                     
  2351                           ;Task_main.c: 48:         EUSART_Turn_TX_OFF();
  2352  000A46  ECFF  F006         	call	_EUSART_Turn_TX_OFF	;wreg free
  2353  000A4A                     
  2354                           ;Task_main.c: 49:         PIR1bits.TXIF = 0;
  2355  000A4A  989E               	bcf	158,4,c	;volatile
  2356  000A4C                     i2l1853:
  2357                           
  2358                           ;Task_main.c: 52:     if(PIR1bits.RCIF){
  2359  000A4C  AA9E               	btfss	158,5,c	;volatile
  2360  000A4E  EF2B  F005         	goto	i2u64_41
  2361  000A52  EF2D  F005         	goto	i2u64_40
  2362  000A56                     i2u64_41:
  2363  000A56  EF3D  F005         	goto	i2l52
  2364  000A5A                     i2u64_40:
  2365  000A5A                     
  2366                           ;Task_main.c: 53:         EUSART_Receive();
  2367  000A5A  EC4D  F006         	call	_EUSART_Receive	;wreg free
  2368  000A5E                     
  2369                           ;Task_main.c: 54:         temp = EUSART_Analize_data();
  2370  000A5E  EC50  F002         	call	_EUSART_Analize_data	;wreg free
  2371  000A62  6E1F               	movwf	RX_TX@temp^0,c
  2372  000A64                     
  2373                           ;Task_main.c: 55:         if(temp != 0){
  2374  000A64  501F               	movf	RX_TX@temp^0,w,c
  2375  000A66  B4D8               	btfsc	status,2,c
  2376  000A68  EF38  F005         	goto	i2u65_41
  2377  000A6C  EF3A  F005         	goto	i2u65_40
  2378  000A70                     i2u65_41:
  2379  000A70  EF3C  F005         	goto	i2l51
  2380  000A74                     i2u65_40:
  2381  000A74                     
  2382                           ;Task_main.c: 56:             Timer_multiplier = temp;
  2383  000A74  C01F  F03E         	movff	RX_TX@temp,_Timer_multiplier
  2384  000A78                     i2l51:
  2385                           
  2386                           ;Task_main.c: 58:         PIR1bits.RCIF = 0;
  2387  000A78  9A9E               	bcf	158,5,c	;volatile
  2388  000A7A                     i2l52:
  2389  000A7A  C01E  FFF5         	movff	??_RX_TX+7,tablat
  2390  000A7E  C01D  FFF8         	movff	??_RX_TX+6,tblptru
  2391  000A82  C01C  FFF7         	movff	??_RX_TX+5,tblptrh
  2392  000A86  C01B  FFF6         	movff	??_RX_TX+4,tblptrl
  2393  000A8A  C01A  FFF4         	movff	??_RX_TX+3,prodh
  2394  000A8E  C019  FFF3         	movff	??_RX_TX+2,prodl
  2395  000A92  C018  FFDA         	movff	??_RX_TX+1,fsr2h
  2396  000A96  C017  FFD9         	movff	??_RX_TX,fsr2l
  2397  000A9A  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2398  000A9C  0011               	retfie		f
  2399  000A9E                     __end_of_RX_TX:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _EUSART_Turn_TX_OFF *****************
  2403 ;; Defined at:
  2404 ;;		line 7 in file "EUSART.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		None
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2418 ;;      Params:         0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0
  2421 ;;      Totals:         0       0       0       0       0
  2422 ;;Total ram usage:        0 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_RX_TX
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text21
  2432  000DFE                     __ptext21:
  2433                           	callstack 0
  2434  000DFE                     _EUSART_Turn_TX_OFF:
  2435                           	callstack 24
  2436  000DFE                     
  2437                           ;EUSART.c: 8:     TXSTAbits.TXEN = 0;
  2438  000DFE  9AAC               	bcf	172,5,c	;volatile
  2439  000E00  0012               	return		;funcret
  2440  000E02                     __end_of_EUSART_Turn_TX_OFF:
  2441                           	callstack 0
  2442                           
  2443 ;; *************** function _EUSART_Transmit *****************
  2444 ;; Defined at:
  2445 ;;		line 15 in file "EUSART.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  size            1    wreg     unsigned char 
  2448 ;;  buffer          2    0[COMRAM] PTR unsigned char 
  2449 ;;		 -> Transmit_Buffer(64), 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  size            1    5[COMRAM] unsigned char 
  2452 ;;  i               2    6[COMRAM] int 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2462 ;;      Params:         2       0       0       0       0
  2463 ;;      Locals:         3       0       0       0       0
  2464 ;;      Temps:          3       0       0       0       0
  2465 ;;      Totals:         8       0       0       0       0
  2466 ;;Total ram usage:        8 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_RX_TX
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text22
  2476  000A9E                     __ptext22:
  2477                           	callstack 0
  2478  000A9E                     _EUSART_Transmit:
  2479                           	callstack 24
  2480                           
  2481                           ;incstack = 0
  2482                           ;EUSART_Transmit@size stored from wreg
  2483  000A9E  6E06               	movwf	EUSART_Transmit@size^0,c
  2484  000AA0                     
  2485                           ;EUSART.c: 16:     for(int i = 0; i < size; i++){
  2486  000AA0  0E00               	movlw	0
  2487  000AA2  6E08               	movwf	(EUSART_Transmit@i+1)^0,c
  2488  000AA4  0E00               	movlw	0
  2489  000AA6  6E07               	movwf	EUSART_Transmit@i^0,c
  2490  000AA8  EF67  F005         	goto	i2l1589
  2491  000AAC                     i2l1585:
  2492                           
  2493                           ;EUSART.c: 17:         TXREG = *(buffer+i);
  2494  000AAC  5007               	movf	EUSART_Transmit@i^0,w,c
  2495  000AAE  2401               	addwf	EUSART_Transmit@buffer^0,w,c
  2496  000AB0  6ED9               	movwf	fsr2l,c
  2497  000AB2  5008               	movf	(EUSART_Transmit@i+1)^0,w,c
  2498  000AB4  2002               	addwfc	(EUSART_Transmit@buffer+1)^0,w,c
  2499  000AB6  6EDA               	movwf	fsr2h,c
  2500  000AB8  50DF               	movf	indf2,w,c
  2501  000ABA  6EAD               	movwf	173,c	;volatile
  2502  000ABC                     i2l195:
  2503  000ABC  A2AC               	btfss	172,1,c	;volatile
  2504  000ABE  EF63  F005         	goto	i2u53_41
  2505  000AC2  EF65  F005         	goto	i2u53_40
  2506  000AC6                     i2u53_41:
  2507  000AC6  EF5E  F005         	goto	i2l195
  2508  000ACA                     i2u53_40:
  2509  000ACA                     
  2510                           ;EUSART.c: 19:     }
  2511  000ACA  4A07               	infsnz	EUSART_Transmit@i^0,f,c
  2512  000ACC  2A08               	incf	(EUSART_Transmit@i+1)^0,f,c
  2513  000ACE                     i2l1589:
  2514  000ACE  5006               	movf	EUSART_Transmit@size^0,w,c
  2515  000AD0  6E03               	movwf	??_EUSART_Transmit^0,c
  2516  000AD2  6A04               	clrf	(??_EUSART_Transmit+1)^0,c
  2517  000AD4  5003               	movf	??_EUSART_Transmit^0,w,c
  2518  000AD6  5C07               	subwf	EUSART_Transmit@i^0,w,c
  2519  000AD8  5008               	movf	(EUSART_Transmit@i+1)^0,w,c
  2520  000ADA  0A80               	xorlw	128
  2521  000ADC  6E05               	movwf	(??_EUSART_Transmit+2)^0,c
  2522  000ADE  5004               	movf	(??_EUSART_Transmit+1)^0,w,c
  2523  000AE0  0A80               	xorlw	128
  2524  000AE2  5805               	subwfb	(??_EUSART_Transmit+2)^0,w,c
  2525  000AE4  A0D8               	btfss	status,0,c
  2526  000AE6  EF77  F005         	goto	i2u54_41
  2527  000AEA  EF79  F005         	goto	i2u54_40
  2528  000AEE                     i2u54_41:
  2529  000AEE  EF56  F005         	goto	i2l1585
  2530  000AF2                     i2u54_40:
  2531  000AF2  0012               	return		;funcret
  2532  000AF4                     __end_of_EUSART_Transmit:
  2533                           	callstack 0
  2534                           
  2535 ;; *************** function _EUSART_Receive *****************
  2536 ;; Defined at:
  2537 ;;		line 24 in file "EUSART.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2551 ;;      Params:         0       0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0
  2553 ;;      Temps:          1       0       0       0       0
  2554 ;;      Totals:         1       0       0       0       0
  2555 ;;Total ram usage:        1 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_RX_TX
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text23
  2565  000C9A                     __ptext23:
  2566                           	callstack 0
  2567  000C9A                     _EUSART_Receive:
  2568                           	callstack 24
  2569  000C9A                     
  2570                           ;EUSART.c: 25:     *RX_pointer = RCREG;
  2571  000C9A  C038  FFD9         	movff	_RX_pointer,fsr2l
  2572  000C9E  C039  FFDA         	movff	_RX_pointer+1,fsr2h
  2573  000CA2  CFAE FFDF          	movff	4014,indf2	;volatile
  2574  000CA6                     
  2575                           ;EUSART.c: 26:     if(*(RX_pointer) != '\n'){
  2576  000CA6  C038  FFD9         	movff	_RX_pointer,fsr2l
  2577  000CAA  C039  FFDA         	movff	_RX_pointer+1,fsr2h
  2578  000CAE  0E0A               	movlw	10
  2579  000CB0  18DE               	xorwf	postinc2,w,c
  2580  000CB2  B4D8               	btfsc	status,2,c
  2581  000CB4  EF5E  F006         	goto	i2u55_41
  2582  000CB8  EF60  F006         	goto	i2u55_40
  2583  000CBC                     i2u55_41:
  2584  000CBC  EF64  F006         	goto	i2l1597
  2585  000CC0                     i2u55_40:
  2586  000CC0                     
  2587                           ;EUSART.c: 27:         RX_pointer++;
  2588  000CC0  4A38               	infsnz	_RX_pointer^0,f,c
  2589  000CC2  2A39               	incf	(_RX_pointer+1)^0,f,c
  2590                           
  2591                           ;EUSART.c: 28:     }
  2592  000CC4  EF6A  F006         	goto	i2l204
  2593  000CC8                     i2l1597:
  2594                           
  2595                           ;EUSART.c: 30:         RX_pointer = Receive_Buffer;
  2596  000CC8  0E80               	movlw	low _Receive_Buffer
  2597  000CCA  6E38               	movwf	_RX_pointer^0,c
  2598  000CCC  0E00               	movlw	high _Receive_Buffer
  2599  000CCE  6E39               	movwf	(_RX_pointer+1)^0,c
  2600  000CD0                     
  2601                           ;EUSART.c: 31:         received = 1;
  2602  000CD0  0E01               	movlw	1
  2603  000CD2  6E41               	movwf	_received^0,c
  2604  000CD4                     i2l204:
  2605  000CD4  0012               	return		;funcret
  2606  000CD6                     __end_of_EUSART_Receive:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function _EUSART_Analize_data *****************
  2610 ;; Defined at:
  2611 ;;		line 37 in file "EUSART.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  temp_pointer    2   20[COMRAM] PTR unsigned char 
  2616 ;;		 -> NULL(0), Receive_Buffer(64), 
  2617 ;;  temp_data       1   19[COMRAM] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      unsigned char 
  2620 ;; Registers used:
  2621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2627 ;;      Params:         0       0       0       0       0
  2628 ;;      Locals:         3       0       0       0       0
  2629 ;;      Temps:          2       0       0       0       0
  2630 ;;      Totals:         5       0       0       0       0
  2631 ;;Total ram usage:        5 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    2
  2634 ;; This function calls:
  2635 ;;		_strstr
  2636 ;; This function is called by:
  2637 ;;		_RX_TX
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text24
  2642  0004A0                     __ptext24:
  2643                           	callstack 0
  2644  0004A0                     _EUSART_Analize_data:
  2645                           	callstack 22
  2646  0004A0                     
  2647                           ;EUSART.c: 38:     char temp_data;;EUSART.c: 39:     char *temp_pointer;;EUSART.c: 40:  
      +                             if(received){
  2648  0004A0  5041               	movf	_received^0,w,c
  2649  0004A2  B4D8               	btfsc	status,2,c
  2650  0004A4  EF56  F002         	goto	i2u56_41
  2651  0004A8  EF58  F002         	goto	i2u56_40
  2652  0004AC                     i2u56_41:
  2653  0004AC  EFF4  F002         	goto	i2l1627
  2654  0004B0                     i2u56_40:
  2655  0004B0                     
  2656                           ;EUSART.c: 41:         temp_pointer = strstr(RX_pointer,"speed=");
  2657  0004B0  C038  F00C         	movff	_RX_pointer,strstr@h
  2658  0004B4  C039  F00D         	movff	_RX_pointer+1,strstr@h+1
  2659  0004B8  0E98               	movlw	low STR_2
  2660  0004BA  6E0E               	movwf	strstr@n^0,c
  2661  0004BC  0E04               	movlw	high STR_2
  2662  0004BE  6E0F               	movwf	(strstr@n+1)^0,c
  2663  0004C0  ECA5  F004         	call	_strstr	;wreg free
  2664  0004C4  C00C  F015         	movff	?_strstr,EUSART_Analize_data@temp_pointer
  2665  0004C8  C00D  F016         	movff	?_strstr+1,EUSART_Analize_data@temp_pointer+1
  2666  0004CC                     
  2667                           ;EUSART.c: 42:         if((*(temp_pointer+7) != '\r')&&(*(temp_pointer+8) != '\r')){
  2668  0004CC  EE20 F007          	lfsr	2,7
  2669  0004D0  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2670  0004D2  26D9               	addwf	fsr2l,f,c
  2671  0004D4  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2672  0004D6  22DA               	addwfc	fsr2h,f,c
  2673  0004D8  0E0D               	movlw	13
  2674  0004DA  18DE               	xorwf	postinc2,w,c
  2675  0004DC  B4D8               	btfsc	status,2,c
  2676  0004DE  EF73  F002         	goto	i2u57_41
  2677  0004E2  EF75  F002         	goto	i2u57_40
  2678  0004E6                     i2u57_41:
  2679  0004E6  EFA3  F002         	goto	i2l1611
  2680  0004EA                     i2u57_40:
  2681  0004EA  EE20 F008          	lfsr	2,8
  2682  0004EE  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2683  0004F0  26D9               	addwf	fsr2l,f,c
  2684  0004F2  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2685  0004F4  22DA               	addwfc	fsr2h,f,c
  2686  0004F6  0E0D               	movlw	13
  2687  0004F8  18DE               	xorwf	postinc2,w,c
  2688  0004FA  B4D8               	btfsc	status,2,c
  2689  0004FC  EF82  F002         	goto	i2u58_41
  2690  000500  EF84  F002         	goto	i2u58_40
  2691  000504                     i2u58_41:
  2692  000504  EFA3  F002         	goto	i2l1611
  2693  000508                     i2u58_40:
  2694  000508                     
  2695                           ;EUSART.c: 43:             temp_data = (*(temp_pointer+6)-48)*100 + (*(temp_pointer+7)-4
      +                          8)*10 + (*(temp_pointer+8)-48);
  2696  000508  EE20 F008          	lfsr	2,8
  2697  00050C  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2698  00050E  26D9               	addwf	fsr2l,f,c
  2699  000510  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2700  000512  22DA               	addwfc	fsr2h,f,c
  2701  000514  50DF               	movf	indf2,w,c
  2702  000516  6E12               	movwf	??_EUSART_Analize_data^0,c
  2703  000518  EE20 F007          	lfsr	2,7
  2704  00051C  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2705  00051E  26D9               	addwf	fsr2l,f,c
  2706  000520  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2707  000522  22DA               	addwfc	fsr2h,f,c
  2708  000524  50DF               	movf	indf2,w,c
  2709  000526  0D0A               	mullw	10
  2710  000528  CFF3 F013          	movff	prodl,??_EUSART_Analize_data+1
  2711  00052C  EE20 F006          	lfsr	2,6
  2712  000530  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2713  000532  26D9               	addwf	fsr2l,f,c
  2714  000534  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2715  000536  22DA               	addwfc	fsr2h,f,c
  2716  000538  50DF               	movf	indf2,w,c
  2717  00053A  0D64               	mullw	100
  2718  00053C  50F3               	movf	243,w,c
  2719  00053E  2413               	addwf	(??_EUSART_Analize_data+1)^0,w,c
  2720  000540  2412               	addwf	??_EUSART_Analize_data^0,w,c
  2721  000542  0F30               	addlw	48
  2722  000544  6E14               	movwf	EUSART_Analize_data@temp_data^0,c
  2723  000546                     i2l1611:
  2724                           
  2725                           ;EUSART.c: 45:         if((*(temp_pointer+7) != '\r')&&(*(temp_pointer+8) == '\r')){
  2726  000546  EE20 F007          	lfsr	2,7
  2727  00054A  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2728  00054C  26D9               	addwf	fsr2l,f,c
  2729  00054E  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2730  000550  22DA               	addwfc	fsr2h,f,c
  2731  000552  0E0D               	movlw	13
  2732  000554  18DE               	xorwf	postinc2,w,c
  2733  000556  B4D8               	btfsc	status,2,c
  2734  000558  EFB0  F002         	goto	i2u59_41
  2735  00055C  EFB2  F002         	goto	i2u59_40
  2736  000560                     i2u59_41:
  2737  000560  EFD7  F002         	goto	i2l1617
  2738  000564                     i2u59_40:
  2739  000564  EE20 F008          	lfsr	2,8
  2740  000568  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2741  00056A  26D9               	addwf	fsr2l,f,c
  2742  00056C  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2743  00056E  22DA               	addwfc	fsr2h,f,c
  2744  000570  0E0D               	movlw	13
  2745  000572  18DE               	xorwf	postinc2,w,c
  2746  000574  A4D8               	btfss	status,2,c
  2747  000576  EFBF  F002         	goto	i2u60_41
  2748  00057A  EFC1  F002         	goto	i2u60_40
  2749  00057E                     i2u60_41:
  2750  00057E  EFD7  F002         	goto	i2l1617
  2751  000582                     i2u60_40:
  2752  000582                     
  2753                           ;EUSART.c: 46:             temp_data = (*(temp_pointer+6)-48)*10 + (*(temp_pointer+7)-48
      +                          )*10;
  2754  000582  EE20 F007          	lfsr	2,7
  2755  000586  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2756  000588  26D9               	addwf	fsr2l,f,c
  2757  00058A  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2758  00058C  22DA               	addwfc	fsr2h,f,c
  2759  00058E  50DF               	movf	indf2,w,c
  2760  000590  0D0A               	mullw	10
  2761  000592  CFF3 F012          	movff	prodl,??_EUSART_Analize_data
  2762  000596  EE20 F006          	lfsr	2,6
  2763  00059A  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2764  00059C  26D9               	addwf	fsr2l,f,c
  2765  00059E  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2766  0005A0  22DA               	addwfc	fsr2h,f,c
  2767  0005A2  50DF               	movf	indf2,w,c
  2768  0005A4  0D0A               	mullw	10
  2769  0005A6  50F3               	movf	243,w,c
  2770  0005A8  2412               	addwf	??_EUSART_Analize_data^0,w,c
  2771  0005AA  0F40               	addlw	64
  2772  0005AC  6E14               	movwf	EUSART_Analize_data@temp_data^0,c
  2773  0005AE                     i2l1617:
  2774                           
  2775                           ;EUSART.c: 48:         if(*(temp_pointer+7) == '\r'){
  2776  0005AE  EE20 F007          	lfsr	2,7
  2777  0005B2  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2778  0005B4  26D9               	addwf	fsr2l,f,c
  2779  0005B6  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2780  0005B8  22DA               	addwfc	fsr2h,f,c
  2781  0005BA  0E0D               	movlw	13
  2782  0005BC  18DE               	xorwf	postinc2,w,c
  2783  0005BE  A4D8               	btfss	status,2,c
  2784  0005C0  EFE4  F002         	goto	i2u61_41
  2785  0005C4  EFE6  F002         	goto	i2u61_40
  2786  0005C8                     i2u61_41:
  2787  0005C8  EFEF  F002         	goto	i2l1621
  2788  0005CC                     i2u61_40:
  2789  0005CC                     
  2790                           ;EUSART.c: 49:             temp_data = (*(temp_pointer+6)-48);
  2791  0005CC  EE20 F006          	lfsr	2,6
  2792  0005D0  5015               	movf	EUSART_Analize_data@temp_pointer^0,w,c
  2793  0005D2  26D9               	addwf	fsr2l,f,c
  2794  0005D4  5016               	movf	(EUSART_Analize_data@temp_pointer+1)^0,w,c
  2795  0005D6  22DA               	addwfc	fsr2h,f,c
  2796  0005D8  50DF               	movf	indf2,w,c
  2797  0005DA  0FD0               	addlw	208
  2798  0005DC  6E14               	movwf	EUSART_Analize_data@temp_data^0,c
  2799  0005DE                     i2l1621:
  2800                           
  2801                           ;EUSART.c: 51:         received = 0;
  2802  0005DE  0E00               	movlw	0
  2803  0005E0  6E41               	movwf	_received^0,c
  2804  0005E2                     
  2805                           ;EUSART.c: 52:         return temp_data;
  2806  0005E2  5014               	movf	EUSART_Analize_data@temp_data^0,w,c
  2807  0005E4  EFF5  F002         	goto	i2l211
  2808  0005E8                     i2l1627:
  2809                           
  2810                           ;EUSART.c: 54:     return 0;
  2811  0005E8  0E00               	movlw	0
  2812  0005EA                     i2l211:
  2813  0005EA  0012               	return		;funcret
  2814  0005EC                     __end_of_EUSART_Analize_data:
  2815                           	callstack 0
  2816                           
  2817 ;; *************** function _strstr *****************
  2818 ;; Defined at:
  2819 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strstr.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  h               2   11[COMRAM] PTR const unsigned char 
  2822 ;;		 -> NULL(0), Receive_Buffer(64), 
  2823 ;;  n               2   13[COMRAM] PTR const unsigned char 
  2824 ;;		 -> STR_2(7), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  nl              2   15[COMRAM] unsigned int 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  2   11[COMRAM] PTR unsigned char 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2836 ;;      Params:         4       0       0       0       0
  2837 ;;      Locals:         2       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0
  2839 ;;      Totals:         6       0       0       0       0
  2840 ;;Total ram usage:        6 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    1
  2843 ;; This function calls:
  2844 ;;		_strchr
  2845 ;;		_strlen
  2846 ;;		_strncmp
  2847 ;; This function is called by:
  2848 ;;		_EUSART_Analize_data
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text25
  2853  00094A                     __ptext25:
  2854                           	callstack 0
  2855  00094A                     _strstr:
  2856                           	callstack 22
  2857  00094A  500E               	movf	strstr@n^0,w,c
  2858  00094C  100F               	iorwf	(strstr@n+1)^0,w,c
  2859  00094E  B4D8               	btfsc	status,2,c
  2860  000950  EFAC  F004         	goto	i2u48_41
  2861  000954  EFAE  F004         	goto	i2u48_40
  2862  000958                     i2u48_41:
  2863  000958  EF00  F005         	goto	i2l1575
  2864  00095C                     i2u48_40:
  2865  00095C  C00E  F001         	movff	strstr@n,strlen@s
  2866  000960  C00F  F002         	movff	strstr@n+1,strlen@s+1
  2867  000964  EC6B  F006         	call	_strlen	;wreg free
  2868  000968  C001  F010         	movff	?_strlen,strstr@nl
  2869  00096C  C002  F011         	movff	?_strlen+1,strstr@nl+1
  2870  000970  EFEB  F004         	goto	i2l1571
  2871  000974                     i2l1563:
  2872  000974  C00C  F001         	movff	strstr@h,strncmp@_l
  2873  000978  C00D  F002         	movff	strstr@h+1,strncmp@_l+1
  2874  00097C  C00E  F003         	movff	strstr@n,strncmp@_r
  2875  000980  C00F  F004         	movff	strstr@n+1,strncmp@_r+1
  2876  000984  C010  F005         	movff	strstr@nl,strncmp@n
  2877  000988  C011  F006         	movff	strstr@nl+1,strncmp@n+1
  2878  00098C  EC71  F003         	call	_strncmp	;wreg free
  2879  000990  5001               	movf	?_strncmp^0,w,c
  2880  000992  1002               	iorwf	(?_strncmp+1)^0,w,c
  2881  000994  A4D8               	btfss	status,2,c
  2882  000996  EFCF  F004         	goto	i2u49_41
  2883  00099A  EFD1  F004         	goto	i2u49_40
  2884  00099E                     i2u49_41:
  2885  00099E  EFD7  F004         	goto	i2l1569
  2886  0009A2                     i2u49_40:
  2887  0009A2  C00C  F00C         	movff	strstr@h,?_strstr
  2888  0009A6  C00D  F00D         	movff	strstr@h+1,?_strstr+1
  2889  0009AA  EF04  F005         	goto	i2l963
  2890  0009AE                     i2l1569:
  2891  0009AE  0E01               	movlw	1
  2892  0009B0  240C               	addwf	strstr@h^0,w,c
  2893  0009B2  6E01               	movwf	strchr@s^0,c
  2894  0009B4  0E00               	movlw	0
  2895  0009B6  200D               	addwfc	(strstr@h+1)^0,w,c
  2896  0009B8  6E02               	movwf	(strchr@s+1)^0,c
  2897  0009BA  C00E  FFF6         	movff	strstr@n,tblptrl
  2898  0009BE  C00F  FFF7         	movff	strstr@n+1,tblptrh
  2899  0009C2                     	if	0	;tblptru may be non-zero
  2900  0009C2                     	endif
  2901  0009C2                     	if	0	;tblptru may be non-zero
  2902  0009C2                     	endif
  2903  0009C2  0008               	tblrd		*
  2904  0009C4  50F5               	movf	tablat,w,c
  2905  0009C6  6E03               	movwf	strchr@c^0,c
  2906  0009C8  6A04               	clrf	(strchr@c+1)^0,c
  2907  0009CA  ECA2  F005         	call	_strchr	;wreg free
  2908  0009CE  C001  F00C         	movff	?_strchr,strstr@h
  2909  0009D2  C002  F00D         	movff	?_strchr+1,strstr@h+1
  2910  0009D6                     i2l1571:
  2911  0009D6  500C               	movf	strstr@h^0,w,c
  2912  0009D8  100D               	iorwf	(strstr@h+1)^0,w,c
  2913  0009DA  B4D8               	btfsc	status,2,c
  2914  0009DC  EFF2  F004         	goto	i2u50_41
  2915  0009E0  EFF4  F004         	goto	i2u50_40
  2916  0009E4                     i2u50_41:
  2917  0009E4  EF00  F005         	goto	i2l1575
  2918  0009E8                     i2u50_40:
  2919  0009E8  C00C  FFD9         	movff	strstr@h,fsr2l
  2920  0009EC  C00D  FFDA         	movff	strstr@h+1,fsr2h
  2921  0009F0  50DF               	movf	indf2,w,c
  2922  0009F2  A4D8               	btfss	status,2,c
  2923  0009F4  EFFE  F004         	goto	i2u51_41
  2924  0009F8  EF00  F005         	goto	i2u51_40
  2925  0009FC                     i2u51_41:
  2926  0009FC  EFBA  F004         	goto	i2l1563
  2927  000A00                     i2u51_40:
  2928  000A00                     i2l1575:
  2929  000A00  0E00               	movlw	0
  2930  000A02  6E0C               	movwf	?_strstr^0,c
  2931  000A04  0E00               	movlw	0
  2932  000A06  6E0D               	movwf	(?_strstr+1)^0,c
  2933  000A08                     i2l963:
  2934  000A08  0012               	return		;funcret
  2935  000A0A                     __end_of_strstr:
  2936                           	callstack 0
  2937                           
  2938 ;; *************** function _strncmp *****************
  2939 ;; Defined at:
  2940 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2943 ;;		 -> NULL(0), Receive_Buffer(64), 
  2944 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2945 ;;		 -> STR_2(7), 
  2946 ;;  n               2    4[COMRAM] unsigned int 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2949 ;;		 -> STR_2(7), 
  2950 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2951 ;;		 -> NULL(0), Receive_Buffer(64), 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  2    0[COMRAM] int 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2961 ;;      Params:         6       0       0       0       0
  2962 ;;      Locals:         4       0       0       0       0
  2963 ;;      Temps:          1       0       0       0       0
  2964 ;;      Totals:        11       0       0       0       0
  2965 ;;Total ram usage:       11 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_strstr
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text26
  2975  0006E2                     __ptext26:
  2976                           	callstack 0
  2977  0006E2                     _strncmp:
  2978                           	callstack 22
  2979  0006E2  C001  F008         	movff	strncmp@_l,strncmp@l
  2980  0006E6  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2981  0006EA  C003  F00A         	movff	strncmp@_r,strncmp@r
  2982  0006EE  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2983  0006F2  0605               	decf	strncmp@n^0,f,c
  2984  0006F4  A0D8               	btfss	status,0,c
  2985  0006F6  0606               	decf	(strncmp@n+1)^0,f,c
  2986  0006F8  2805               	incf	strncmp@n^0,w,c
  2987  0006FA  E106               	bnz	i2u38_41
  2988  0006FC  2806               	incf	(strncmp@n+1)^0,w,c
  2989  0006FE  A4D8               	btfss	status,2,c
  2990  000700  EF84  F003         	goto	i2u38_41
  2991  000704  EF86  F003         	goto	i2u38_40
  2992  000708                     i2u38_41:
  2993  000708  EF93  F003         	goto	i2l1481
  2994  00070C                     i2u38_40:
  2995  00070C  0E00               	movlw	0
  2996  00070E  6E02               	movwf	(?_strncmp+1)^0,c
  2997  000710  0E00               	movlw	0
  2998  000712  6E01               	movwf	?_strncmp^0,c
  2999  000714  EFDB  F003         	goto	i2l982
  3000  000718                     i2l1479:
  3001  000718  4A08               	infsnz	strncmp@l^0,f,c
  3002  00071A  2A09               	incf	(strncmp@l+1)^0,f,c
  3003  00071C  4A0A               	infsnz	strncmp@r^0,f,c
  3004  00071E  2A0B               	incf	(strncmp@r+1)^0,f,c
  3005  000720  0605               	decf	strncmp@n^0,f,c
  3006  000722  A0D8               	btfss	status,0,c
  3007  000724  0606               	decf	(strncmp@n+1)^0,f,c
  3008  000726                     i2l1481:
  3009  000726  C008  FFD9         	movff	strncmp@l,fsr2l
  3010  00072A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3011  00072E  50DF               	movf	indf2,w,c
  3012  000730  B4D8               	btfsc	status,2,c
  3013  000732  EF9D  F003         	goto	i2u39_41
  3014  000736  EF9F  F003         	goto	i2u39_40
  3015  00073A                     i2u39_41:
  3016  00073A  EFCA  F003         	goto	i2l1489
  3017  00073E                     i2u39_40:
  3018  00073E  C00A  FFF6         	movff	strncmp@r,tblptrl
  3019  000742  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3020  000746                     	if	0	;tblptru may be non-zero
  3021  000746                     	endif
  3022  000746                     	if	0	;tblptru may be non-zero
  3023  000746                     	endif
  3024  000746  0008               	tblrd		*
  3025  000748  50F5               	movf	tablat,w,c
  3026  00074A  0900               	iorlw	0
  3027  00074C  B4D8               	btfsc	status,2,c
  3028  00074E  EFAB  F003         	goto	i2u40_41
  3029  000752  EFAD  F003         	goto	i2u40_40
  3030  000756                     i2u40_41:
  3031  000756  EFCA  F003         	goto	i2l1489
  3032  00075A                     i2u40_40:
  3033  00075A  5005               	movf	strncmp@n^0,w,c
  3034  00075C  1006               	iorwf	(strncmp@n+1)^0,w,c
  3035  00075E  B4D8               	btfsc	status,2,c
  3036  000760  EFB4  F003         	goto	i2u41_41
  3037  000764  EFB6  F003         	goto	i2u41_40
  3038  000768                     i2u41_41:
  3039  000768  EFCA  F003         	goto	i2l1489
  3040  00076C                     i2u41_40:
  3041  00076C  C008  FFD9         	movff	strncmp@l,fsr2l
  3042  000770  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3043  000774  50DF               	movf	indf2,w,c
  3044  000776  6E07               	movwf	??_strncmp^0,c
  3045  000778  C00A  FFF6         	movff	strncmp@r,tblptrl
  3046  00077C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3047  000780                     	if	0	;tblptru may be non-zero
  3048  000780                     	endif
  3049  000780                     	if	0	;tblptru may be non-zero
  3050  000780                     	endif
  3051  000780  0008               	tblrd		*
  3052  000782  50F5               	movf	tablat,w,c
  3053  000784  1807               	xorwf	??_strncmp^0,w,c
  3054  000786  B4D8               	btfsc	status,2,c
  3055  000788  EFC8  F003         	goto	i2u42_41
  3056  00078C  EFCA  F003         	goto	i2u42_40
  3057  000790                     i2u42_41:
  3058  000790  EF8C  F003         	goto	i2l1479
  3059  000794                     i2u42_40:
  3060  000794                     i2l1489:
  3061  000794  C008  FFD9         	movff	strncmp@l,fsr2l
  3062  000798  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3063  00079C  50DF               	movf	indf2,w,c
  3064  00079E  6E07               	movwf	??_strncmp^0,c
  3065  0007A0  C00A  FFF6         	movff	strncmp@r,tblptrl
  3066  0007A4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3067  0007A8                     	if	0	;tblptru may be non-zero
  3068  0007A8                     	endif
  3069  0007A8                     	if	0	;tblptru may be non-zero
  3070  0007A8                     	endif
  3071  0007A8  0008               	tblrd		*
  3072  0007AA  50F5               	movf	tablat,w,c
  3073  0007AC  5C07               	subwf	??_strncmp^0,w,c
  3074  0007AE  6E01               	movwf	?_strncmp^0,c
  3075  0007B0  6A02               	clrf	(?_strncmp+1)^0,c
  3076  0007B2  A0D8               	btfss	status,0,c
  3077  0007B4  0602               	decf	(?_strncmp+1)^0,f,c
  3078  0007B6                     i2l982:
  3079  0007B6  0012               	return		;funcret
  3080  0007B8                     __end_of_strncmp:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _strlen *****************
  3084 ;; Defined at:
  3085 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3088 ;;		 -> STR_2(7), 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3091 ;;		 -> STR_2(7), 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  2    0[COMRAM] unsigned int 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3101 ;;      Params:         2       0       0       0       0
  3102 ;;      Locals:         2       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0
  3104 ;;      Totals:         4       0       0       0       0
  3105 ;;Total ram usage:        4 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_strstr
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text27
  3115  000CD6                     __ptext27:
  3116                           	callstack 0
  3117  000CD6                     _strlen:
  3118                           	callstack 22
  3119  000CD6  C001  F003         	movff	strlen@s,strlen@a
  3120  000CDA  C002  F004         	movff	strlen@s+1,strlen@a+1
  3121  000CDE  EF73  F006         	goto	i2l1467
  3122  000CE2                     i2l1465:
  3123  000CE2  4A01               	infsnz	strlen@s^0,f,c
  3124  000CE4  2A02               	incf	(strlen@s+1)^0,f,c
  3125  000CE6                     i2l1467:
  3126  000CE6  C001  FFF6         	movff	strlen@s,tblptrl
  3127  000CEA  C002  FFF7         	movff	strlen@s+1,tblptrh
  3128  000CEE                     	if	0	;tblptru may be non-zero
  3129  000CEE                     	endif
  3130  000CEE                     	if	0	;tblptru may be non-zero
  3131  000CEE                     	endif
  3132  000CEE  0008               	tblrd		*
  3133  000CF0  50F5               	movf	tablat,w,c
  3134  000CF2  0900               	iorlw	0
  3135  000CF4  A4D8               	btfss	status,2,c
  3136  000CF6  EF7F  F006         	goto	i2u37_41
  3137  000CFA  EF81  F006         	goto	i2u37_40
  3138  000CFE                     i2u37_41:
  3139  000CFE  EF71  F006         	goto	i2l1465
  3140  000D02                     i2u37_40:
  3141  000D02  5003               	movf	strlen@a^0,w,c
  3142  000D04  5C01               	subwf	strlen@s^0,w,c
  3143  000D06  6E01               	movwf	?_strlen^0,c
  3144  000D08  5004               	movf	(strlen@a+1)^0,w,c
  3145  000D0A  5802               	subwfb	(strlen@s+1)^0,w,c
  3146  000D0C  6E02               	movwf	(?_strlen+1)^0,c
  3147  000D0E  0012               	return		;funcret
  3148  000D10                     __end_of_strlen:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _strchr *****************
  3152 ;; Defined at:
  3153 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strchr.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3156 ;;		 -> NULL(0), Receive_Buffer(64), 
  3157 ;;  c               2    2[COMRAM] int 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2    0[COMRAM] PTR unsigned char 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3169 ;;      Params:         4       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0
  3171 ;;      Temps:          1       0       0       0       0
  3172 ;;      Totals:         5       0       0       0       0
  3173 ;;Total ram usage:        5 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_strstr
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text28
  3183  000B44                     __ptext28:
  3184                           	callstack 0
  3185  000B44                     _strchr:
  3186                           	callstack 22
  3187  000B44                     i2l969:
  3188  000B44  C001  FFD9         	movff	strchr@s,fsr2l
  3189  000B48  C002  FFDA         	movff	strchr@s+1,fsr2h
  3190  000B4C  5003               	movf	strchr@c^0,w,c
  3191  000B4E  18DE               	xorwf	postinc2,w,c
  3192  000B50  A4D8               	btfss	status,2,c
  3193  000B52  EFAD  F005         	goto	i2u43_41
  3194  000B56  EFAF  F005         	goto	i2u43_40
  3195  000B5A                     i2u43_41:
  3196  000B5A  EFB5  F005         	goto	i2l1499
  3197  000B5E                     i2u43_40:
  3198  000B5E  C001  F001         	movff	strchr@s,?_strchr
  3199  000B62  C002  F002         	movff	strchr@s+1,?_strchr+1
  3200  000B66  EFC7  F005         	goto	i2l971
  3201  000B6A                     i2l1499:
  3202  000B6A  C001  FFD9         	movff	strchr@s,fsr2l
  3203  000B6E  C002  FFDA         	movff	strchr@s+1,fsr2h
  3204  000B72  4A01               	infsnz	strchr@s^0,f,c
  3205  000B74  2A02               	incf	(strchr@s+1)^0,f,c
  3206  000B76  50DF               	movf	indf2,w,c
  3207  000B78  A4D8               	btfss	status,2,c
  3208  000B7A  EFC1  F005         	goto	i2u44_41
  3209  000B7E  EFC3  F005         	goto	i2u44_40
  3210  000B82                     i2u44_41:
  3211  000B82  EFA2  F005         	goto	i2l969
  3212  000B86                     i2u44_40:
  3213  000B86  0E00               	movlw	0
  3214  000B88  6E01               	movwf	?_strchr^0,c
  3215  000B8A  0E00               	movlw	0
  3216  000B8C  6E02               	movwf	(?_strchr+1)^0,c
  3217  000B8E                     i2l971:
  3218  000B8E  0012               	return		;funcret
  3219  000B90                     __end_of_strchr:
  3220                           	callstack 0
  3221                           
  3222                           	psect	rparam
  3223  0000                     
  3224                           	psect	temp
  3225  000042                     btemp:
  3226                           	callstack 0
  3227  000042                     	ds	1
  3228  0000                     int$flags	set	btemp
  3229  0000                     wtemp8	set	btemp+1
  3230  0000                     ttemp5	set	btemp+1
  3231  0000                     ttemp6	set	btemp+4
  3232  0000                     ttemp7	set	btemp+8
  3233                           
  3234                           	psect	config
  3235                           
  3236                           ;Config register CONFIG1L @ 0x7FF8
  3237                           ;	Watchdog Timer Enable bit
  3238                           ;	WDTEN = ON, WDT enabled
  3239                           ;	Stack Overflow/Underflow Reset Enable bit
  3240                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  3241                           ;	Extended Instruction Set Enable bit
  3242                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3243                           ;	Background Debugger Enable bit
  3244                           ;	DEBUG = 0x1, unprogrammed default
  3245  7FF8                     	org	32760
  3246  7FF8  A1                 	db	161
  3247                           
  3248                           ;Config register CONFIG1H @ 0x7FF9
  3249                           ;	Code Protection bit
  3250                           ;	CP0 = OFF, Program memory is not code-protected
  3251  7FF9                     	org	32761
  3252  7FF9  F4                 	db	244
  3253                           
  3254                           ;Config register CONFIG2L @ 0x7FFA
  3255                           ;	Oscillator Selection bits
  3256                           ;	FOSC = HS, HS oscillator
  3257                           ;	Default/Reset System Clock Select bit
  3258                           ;	FOSC2 = ON, Clock selected by FOSC as system clock is enabled when OSCCON<1:0> = 00
  3259                           ;	Fail-Safe Clock Monitor Enable bit
  3260                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3261                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  3262                           ;	IESO = ON, Two-Speed Start-up enabled
  3263  7FFA                     	org	32762
  3264  7FFA  C4                 	db	196
  3265                           
  3266                           ;Config register CONFIG2H @ 0x7FFB
  3267                           ;	Watchdog Timer Postscale Select bits
  3268                           ;	WDTPS = 32768, 1:32768
  3269  7FFB                     	org	32763
  3270  7FFB  FF                 	db	255
  3271                           
  3272                           ; Padding undefined space
  3273  7FFC                     	org	32764
  3274  7FFC  FF                 	db	255
  3275                           
  3276                           ;Config register CONFIG3H @ 0x7FFD
  3277                           ;	CCP2 MUX bit
  3278                           ;	CCP2MX = DEFAULT, CCP2 is multiplexed with RC1
  3279  7FFD                     	org	32765
  3280  7FFD  F1                 	db	241
  3281                           tosu	equ	0xFFF
  3282                           tosh	equ	0xFFE
  3283                           tosl	equ	0xFFD
  3284                           stkptr	equ	0xFFC
  3285                           pclatu	equ	0xFFB
  3286                           pclath	equ	0xFFA
  3287                           pcl	equ	0xFF9
  3288                           tblptru	equ	0xFF8
  3289                           tblptrh	equ	0xFF7
  3290                           tblptrl	equ	0xFF6
  3291                           tablat	equ	0xFF5
  3292                           prodh	equ	0xFF4
  3293                           prodl	equ	0xFF3
  3294                           indf0	equ	0xFEF
  3295                           postinc0	equ	0xFEE
  3296                           postdec0	equ	0xFED
  3297                           preinc0	equ	0xFEC
  3298                           plusw0	equ	0xFEB
  3299                           fsr0h	equ	0xFEA
  3300                           fsr0l	equ	0xFE9
  3301                           wreg	equ	0xFE8
  3302                           indf1	equ	0xFE7
  3303                           postinc1	equ	0xFE6
  3304                           postdec1	equ	0xFE5
  3305                           preinc1	equ	0xFE4
  3306                           plusw1	equ	0xFE3
  3307                           fsr1h	equ	0xFE2
  3308                           fsr1l	equ	0xFE1
  3309                           bsr	equ	0xFE0
  3310                           indf2	equ	0xFDF
  3311                           postinc2	equ	0xFDE
  3312                           postdec2	equ	0xFDD
  3313                           preinc2	equ	0xFDC
  3314                           plusw2	equ	0xFDB
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8

Data Sizes:
    Strings     158
    Constant    0
    Data        7
    BSS         131
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55      65
    BANK0           128      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), Receive_Buffer(BANK0[64]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), Receive_Buffer(BANK0[64]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), Receive_Buffer(BANK0[64]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), Receive_Buffer(BANK0[64]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), Receive_Buffer(BANK0[64]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> Transmit_Buffer(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> Transmit_Buffer(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_22(CODE[12]), STR_21(CODE[12]), STR_20(CODE[12]), STR_19(CODE[12]), 
		 -> STR_18(CODE[12]), STR_17(CODE[12]), STR_16(CODE[12]), STR_15(CODE[12]), 
		 -> STR_14(CODE[12]), STR_13(CODE[13]), STR_12(CODE[12]), STR_11(CODE[13]), 
		 -> STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[12]), STR_7(CODE[12]), 
		 -> STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[12]), 
		 -> STR_1(CODE[30]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_22(CODE[12]), STR_21(CODE[12]), STR_20(CODE[12]), STR_19(CODE[12]), 
		 -> STR_18(CODE[12]), STR_17(CODE[12]), STR_16(CODE[12]), STR_15(CODE[12]), 
		 -> STR_14(CODE[12]), STR_13(CODE[13]), STR_12(CODE[12]), STR_11(CODE[13]), 
		 -> STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[12]), STR_7(CODE[12]), 
		 -> STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[12]), 
		 -> STR_1(CODE[30]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), Receive_Buffer(BANK0[64]), 

    EUSART_Analize_data@temp_pointer	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), Receive_Buffer(BANK0[64]), 

    EUSART_Transmit@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> Transmit_Buffer(BANK0[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> Transmit_Buffer(BANK0[64]), 

    RX_pointer	PTR unsigned char  size(2) Largest target is 64
		 -> Receive_Buffer(BANK0[64]), 

    TX_pointer	PTR unsigned char  size(2) Largest target is 64
		 -> Transmit_Buffer(BANK0[64]), 


Critical Paths under _main in COMRAM

    _Init_Startup->_strcpy
    _GPIO_Setup->_Set_PORTA_as_output
    _GPIO_Setup->_Set_PORTB_as_input
    _GPIO_Setup->_Set_PORTB_as_output

Critical Paths under _Timers in COMRAM

    _Timers->_LED_Controller_Switch_Left
    _Timers->_LED_Controller_Switch_Right
    _LED_Controller_Switch_Right->i1_strcpy
    _LED_Controller_Switch_Left->i1_strcpy

Critical Paths under _RX_TX in COMRAM

    _RX_TX->_EUSART_Analize_data
    _EUSART_Analize_data->_strstr
    _strstr->_strncmp

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timers in BANK0

    None.

Critical Paths under _RX_TX in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timers in BANK1

    None.

Critical Paths under _RX_TX in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timers in BANK2

    None.

Critical Paths under _RX_TX in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timers in BANK3

    None.

Critical Paths under _RX_TX in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2435
                  _EUSART_Turn_RX_ON
                         _GPIO_Setup
                       _Init_Startup
                  _Timers_Turn_T0_ON
 ---------------------------------------------------------------------------------
 (1) _Timers_Turn_T0_ON                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Startup                                         0     0      0    2390
                       _Configure_T0
                  _EUSART_Turn_TX_ON
                         _Set_EUSART
                      _Toggle_HS_Osc
                 _Turn_on_Interrupts
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4    2248
                                             47 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Turn_on_Interrupts                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Toggle_HS_Osc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_EUSART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Turn_TX_ON                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Configure_T0                                         5     3      2     142
                                             47 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _GPIO_Setup                                           0     0      0      45
                _Set_PORTA_as_output
                 _Set_PORTB_as_input
                _Set_PORTB_as_output
 ---------------------------------------------------------------------------------
 (2) _Set_PORTB_as_output                                  3     3      0      15
                                             47 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Set_PORTB_as_input                                   3     3      0      15
                                             47 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Set_PORTA_as_output                                  3     3      0      15
                                             47 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Turn_RX_ON                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Timers                                               5     5      0    3023
                                             42 COMRAM     5     5      0
         _LED_Controller_Switch_Left
        _LED_Controller_Switch_Right
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _LED_Controller_Switch_Right                          3     3      0    1356
                                             39 COMRAM     3     3      0
                i1_EUSART_Turn_TX_ON
                           i1_strcpy
 ---------------------------------------------------------------------------------
 (4) _LED_Controller_Switch_Left                           3     3      0    1356
                                             39 COMRAM     3     3      0
                i1_EUSART_Turn_TX_ON
                           i1_strcpy
 ---------------------------------------------------------------------------------
 (5) i1_strcpy                                             8     4      4    1136
                                             31 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) i1_EUSART_Turn_TX_ON                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _RX_TX                                                9     9      0    1712
                                             22 COMRAM     9     9      0
                _EUSART_Analize_data
                     _EUSART_Receive
                    _EUSART_Transmit
                 _EUSART_Turn_TX_OFF
 ---------------------------------------------------------------------------------
 (7) _EUSART_Turn_TX_OFF                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit                                      8     6      2     166
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Analize_data                                  5     5      0    1501
                                             17 COMRAM     5     5      0
                             _strstr
 ---------------------------------------------------------------------------------
 (8) _strstr                                               6     2      4    1233
                                             11 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (9) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _strchr                                               5     1      4     240
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Turn_RX_ON
   _GPIO_Setup
     _Set_PORTA_as_output
     _Set_PORTB_as_input
     _Set_PORTB_as_output
   _Init_Startup
     _Configure_T0
     _EUSART_Turn_TX_ON
     _Set_EUSART
     _Toggle_HS_Osc
     _Turn_on_Interrupts
     _strcpy
   _Timers_Turn_T0_ON

 _Timers (ROOT)
   _LED_Controller_Switch_Left
     i1_EUSART_Turn_TX_ON
     i1_strcpy
   _LED_Controller_Switch_Right
     i1_EUSART_Turn_TX_ON
     i1_strcpy
   ___wmul

 _RX_TX (ROOT)
   _EUSART_Analize_data
     _strstr
       _strchr
       _strlen
       _strncmp
   _EUSART_Receive
   _EUSART_Transmit
   _EUSART_Turn_TX_OFF

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      80       4      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      41       1       51.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1      11        0.0%
DATA                 0      0      C1      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jun 10 13:43:17 2020

 LED_Controller_Switch_Left@current_led 002A                                      l80 0D78  
                                    l83 0D56                                      l67 0DAC  
                                    l77 0D98                                      l86 0B42  
                                    u94 0D8E                                      u95 0D8A  
                                    bsr 000FE0                     ___wmul@multiplicand 0022  
                           ?_GPIO_Setup 0001                                     l133 0DEC  
                                   l136 0DDE                                     l216 0DF0  
                                   l153 06E0                                     l161 0BD8  
                                   l139 0DCC                                     l190 0DF8  
                                   l184 0DF4                                     l950 0C58  
                                   u104 0D6C                                     u105 0D68  
                                   u114 0D4A                                     u115 0D46  
                                   u450 06C4                                     u451 06C0  
                                   u460 06DC                                     u620 0BB8  
                                   u461 06D8                                     u621 0BB4  
                                   u470 0C58                                     u471 0C54  
                                   wreg 000FE8                                    l1031 0D7C  
                                  l1033 0D5A                                    l1041 0DD6  
                                  l1035 0D38                                    l1043 0DB6  
                                  l1037 0DE8                                    l1039 0DCE  
                 ??i1_EUSART_Turn_TX_ON 0020                                    l1511 0606  
                                  l1521 0638                                    l1513 0610  
                                  l1505 05EE                                    l1523 0642  
                                  l1515 061A                                    l1531 06B2  
                                  l1507 05F2                                    l1099 0DF2  
                                  l1533 06C4                                    l1517 0624  
                                  l1509 05FC                                    l1543 06DE  
                                  l1535 06CA                                    l1519 062E  
                                  l1385 0AF4                                    l1537 06DC  
                                  l1529 0648                                    l1387 0DF6  
                                  l1555 0C1A                                    l1557 0C2A  
                                  l1389 0DEE                                    l1911 0666  
                                  l1831 0BB8                                    l1823 0B90  
                                  l1913 06A4                                    l1833 0BCC  
                                  l1825 0B94                                    l1835 0BD0  
                                  l1827 0B96                                    l1837 0BD4  
                                  l1829 0B9A                                    l1891 0DA6  
                                  l1893 0DAA                                    l1885 0D9A  
                                  l1887 0D9E                                    l1889 0DA2  
                                  STR_1 0401                                    STR_2 0498  
                                  STR_3 0438                                    STR_4 0444  
                                  STR_5 0450                                    STR_6 045C  
                                  STR_7 0468                                    STR_8 0474  
                                  STR_9 0480                                    i1l62 00AA  
                                  i2l51 0A78                                    i2l52 0A7A  
                                  _main 0D9A                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 0042  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 00C2                            ___param_bank 000000  
                         ?_Init_Startup 0001                                   ?_main 0001  
                                 STR_10 048C                                   STR_11 041F  
                                 STR_12 042C                                   _T0CON 000FD5  
                                 i1l250 08BC                                   i1l242 088A  
                                 i1l251 08C4                                   i1l243 0948  
                                 i1l252 08CC                                   i1l261 07C8  
                                 i1l253 08D4                                   i1l245 0894  
                                 i1l262 07D2                                   i1l246 089C  
                                 i1l263 07DA                                   i1l247 08A4  
                                 i1l184 0DFC                                   i1l264 07E2  
                                 i1l248 08AC                                   i1l265 07EA  
                                 i1l249 08B4                                   i1l273 0D34  
                                 i1l266 07F2                                   i1l258 07BE  
                                 i2l211 05EA                                   i1l267 07FA  
                                 i1l259 0882                                   i2l204 0CD4  
                                 i1l268 0802                                   i1l269 080A  
                                 i2l195 0ABC                                   i2l187 0E00  
                                 i1l950 0C98                                   i2l199 0AF2  
                                 i2l971 0B8E                                   i2l963 0A08  
                                 i2l982 07B6                                   i2l969 0B44  
                                 i2l978 0D0E                                   _RCREG 000FAE  
                                 _SPBRG 000FAF                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TXREG 000FAD  
                                 _RX_TX 0008                              _RX_pointer 0038  
                                 tablat 000FF5                                   ttemp5 0043  
                                 ttemp6 0046                                   ttemp7 004A  
                                 status 000FD8                                   wtemp8 0043  
                       __end_of_strncmp 07B8                     __size_of_GPIO_Setup 0050  
                            _TX_pointer 003A                        __end_ofi1_strcpy 0C9A  
                       __initialization 0BDA                            __end_of_main 0DB6  
                     ??_EUSART_Transmit 0003                          ??_Init_Startup 0038  
                                ??_main 0038                    __end_of_Configure_T0 06E2  
                         __activetblptr 000002                      _EUSART_Turn_TX_OFF 0DFE  
                                ?_RX_TX 0001                              _Set_EUSART 0DCE  
                Set_PORTB_as_input@port 0032                                  _ADCON0 000FC2  
                                _ADCON1 000FC1                     ?_EUSART_Turn_TX_OFF 0001  
                                i1l1121 0DFA                                  i1l1631 0886  
                                i1l1705 08D8                                  i1l1633 088E  
                                i1l1721 08DE                                  i1l1581 0C6A  
                                i1l1727 07BA                                  i1l1809 0812  
                                i1l1737 07CC                                  i1l1729 07C2  
                                i1l1817 0818                                  i1l1841 0D2C  
                                i1l1579 0C5A                                  i1l1915 08F2  
                                i1l1917 082C                                  i2l1135 0DFE  
                                i1l1839 0D10                                  i1l1871 0078  
                                i1l1863 002E                                  i1l1881 00A4  
                                i1l1873 0084                                  i1l1865 003C  
                                i1l1883 00A8                                  i1l1875 008C  
                                i1l1867 0040                                  i2l1501 0B86  
                                i1l1869 0068                                  i1l1877 0094  
                                i1l1879 0096                                  i2l1601 04A0  
                                i2l1611 0546                                  i2l1603 04B0  
                                i2l1621 05DE                                  i2l1613 0564  
                                i2l1605 04CC                                  i2l1463 0CD6  
                                i2l1623 05E2                                  i2l1615 0582  
                                i2l1607 04EA                                  i2l1465 0CE2  
                                i2l1481 0726                                  i2l1473 06E2  
                                i2l1561 095C                                  i2l1617 05AE  
                                i2l1609 0508                                  i2l1467 0CE6  
                                i2l1483 073E                                  i2l1475 070C  
                                i2l1563 0974                                  i2l1571 09D6  
                                i2l1619 05CC                                  i2l1627 05E8  
                                i2l1493 0B44                                  i2l1469 0D02  
                                i2l1485 075A                                  i2l1573 09E8  
                                i2l1565 09A2                                  i2l1495 0B5E  
                                i2l1487 076C                                  i2l1479 0718  
                                i2l1575 0A00                                  i2l1559 094A  
                                i2l1591 0C9A                                  i2l1583 0AA0  
                                i2l1489 0794                                  i2l1569 09AE  
                                i2l1593 0CA6                                  i2l1585 0AAC  
                                i2l1499 0B6A                                  i2l1595 0CC0  
                                i2l1587 0ACA                                  i2l1851 0A4A  
                                i2l1597 0CC8                                  i2l1589 0ACE  
                                i2l1861 0A74                                  i2l1853 0A4C  
                                i2l1845 0A2A                                  i2l1599 0CD0  
                                i2l1855 0A5A                                  i2l1847 0A38  
                                i2l1857 0A5E                                  i2l1849 0A46  
                                i2l1859 0A64                                  _OSCCON 000FD3  
                        _EUSART_Receive 0C9A                                  _SPBRGH 000FB0  
                                _Timers 0018                                  ___wmul 0D10  
                  ??_EUSART_Turn_TX_OFF 0001                                  clear_0 0C00  
                                _strchr 0B44                                  _strcpy 0C1A  
                                _strlen 0CD6                                  _strstr 094A  
                          __pdataCOMRAM 0038                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                               ??_strncmp 0007  
                __end_of_EUSART_Receive 0CD6            __size_of_EUSART_Analize_data 014C  
                            __accesstop 0080                 __end_of__initialization 0C0C  
                    _Turn_on_Interrupts 0DB6                           ___rparam_used 000001  
                         __end_of_RX_TX 0A9E                     ?_Turn_on_Interrupts 0001  
                        __pcstackCOMRAM 0001                      _Set_PORTB_as_input 0D7A  
                           _Current_LED 003C                            ??_GPIO_Setup 0033  
                   ?_Set_PORTB_as_input 0001                                 ??_RX_TX 0017  
                           ?_Set_EUSART 0001                    ??_Turn_on_Interrupts 0030  
                             ?i1_strcpy 0020                             i1strcpy@src 0022  
                       ?_EUSART_Receive 0001            __size_of_Set_PORTA_as_output 0022  
                 __end_of_Toggle_HS_Osc 0DEE                              __pbssBANK0 0080  
                  __end_of_Init_Startup 0BDA                    ??_Set_PORTB_as_input 0030  
                    __end_of_GPIO_Setup 0B44            __size_of_Set_PORTB_as_output 0022  
                               ?_Timers 0001                                 ?___wmul 0020  
                 __size_of_Configure_T0 00F6                                 ?_strchr 0001  
                               ?_strcpy 0030                                 ?_strlen 0001  
                               ?_strstr 000C             __end_ofi1_EUSART_Turn_TX_ON 0DFE  
                               i1u52_20 0C98                                 i1u52_21 0C94  
                               i2u40_40 075A                                 i2u40_41 0756  
                               i2u41_40 076C                                 i2u41_41 0768  
                               i1u66_20 003C                                 i1u66_21 0038  
                               i2u42_40 0794                                 i2u50_40 09E8  
                               i2u42_41 0790                                 i2u50_41 09E4  
                               i1u67_20 0068                                 i1u67_21 0064  
                               i2u43_40 0B5E                                 i2u51_40 0A00  
                               i2u43_41 0B5A                                 i2u51_41 09FC  
                               i1u68_20 0078                                 i1u68_21 0074  
                               i2u44_40 0B86                                 i2u60_40 0582  
                               i2u44_41 0B82                                 i2u60_41 057E  
                               i1u69_20 00A4                                 i1u69_21 00A0  
                               i2u37_40 0D02                                 i2u61_40 05CC  
                               i2u53_40 0ACA                                 i2u37_41 0CFE  
                               i2u61_41 05C8                                 i2u53_41 0AC6  
                               i2u38_40 070C                                 i2u54_40 0AF2  
                               i2u38_41 0708                                 i2u54_41 0AEE  
                               i2u39_40 073E                                 i2u55_40 0CC0  
                               i2u63_40 0A38                                 i2u39_41 073A  
                               i2u55_41 0CBC                                 i2u63_41 0A34  
                               i2u48_40 095C                                 i2u56_40 04B0  
                               i2u64_40 0A5A                                 i2u48_41 0958  
                               i2u56_41 04AC                                 i2u64_41 0A56  
                            ??i1_strcpy 0024                                 i2u49_40 09A2  
                               i2u57_40 04EA                                 i2u65_40 0A74  
                               i2u49_41 099E                                 i2u57_41 04E6  
                               i2u65_41 0A70                                 i2u58_40 0508  
                               i2u58_41 0504                                 i2u59_40 0564  
                               i2u59_41 0560            ?_LED_Controller_Switch_Right 0001  
                       _EUSART_Transmit 0A9E                            _Configure_T0 05EC  
                               __Hparam 0000                                 __Lparam 0000  
                   __size_of_Set_EUSART 0012                         __size_of_Timers 00AA  
                       __size_of___wmul 0026                            __psmallconst 0400  
                               __pcinit 0BDA                                 __ramtop 0400  
                               __ptext0 0D9A                                 __ptext1 0DEE  
                               __ptext2 0B90                                 __ptext3 0C1A  
                               __ptext4 0DB6                                 __ptext5 0DE8  
                               __ptext6 0DCE                                 __ptext7 0DF2  
                               __ptext8 05EC                                 __ptext9 0AF4  
                             _T0CONbits 000FD5                         __size_of_strchr 004C  
                       __size_of_strcpy 0040                         __size_of_strlen 003A  
                       __size_of_strstr 00C0            ??_LED_Controller_Switch_Left 0028  
                               _strncmp 06E2                          __pintcode_body 0A0A  
                  end_of_initialization 0C0C                               RX_TX@temp 001F  
                         __Lmediumconst 0000                                 int_func 0A0A  
         ??_LED_Controller_Switch_Right 0028                               _RCSTAbits 000FAB  
                               postdec1 000FE5                                 postinc0 000FEE  
                               postinc2 000FDE                                 strchr@c 0003  
   __size_of_LED_Controller_Switch_Left 00CC                                 strchr@s 0001  
                               strcpy@d 0036                     _EUSART_Analize_data 04A0  
                               strlen@a 0003                                 strcpy@s 0034  
                               strlen@s 0001                                 strstr@h 000C  
                               strstr@n 000E                               _PORTAbits 000F80  
                             _PORTBbits 000F81            EUSART_Analize_data@temp_data 0014  
                 __size_of_Init_Startup 004A                 __end_of_EUSART_Transmit 0AF4  
                  ?_EUSART_Analize_data 0001                               _TXSTAbits 000FAC  
               Set_PORTB_as_output@port 0032                          _Receive_Buffer 0080  
                        __end_of_Timers 00C2             __size_of_EUSART_Turn_TX_OFF 0004  
                             _Direction 003D                     _Set_PORTA_as_output 0D58  
                        __end_of___wmul 0D36                             _BAUDCONbits 000FB8  
                         __pidataCOMRAM 0DE0    __size_of_LED_Controller_Switch_Right 00C6  
                          _Init_Startup 0B90                          __end_of_strchr 0B90  
                        __end_of_strcpy 0C5A                          __end_of_strlen 0D10  
                   _Set_PORTB_as_output 0D36                        ??_EUSART_Receive 0001  
                        __end_of_strstr 0A0A                            ??_Set_EUSART 0030  
                   start_initialization 0BDA                    ?_Set_PORTA_as_output 0001  
                 ??_EUSART_Analize_data 0012                               i1strcpy@d 0026  
                             i1strcpy@s 0024                       __size_ofi1_strcpy 0040  
                     _EUSART_Turn_RX_ON 0DF6                       _EUSART_Turn_TX_ON 0DF2  
                    ?_EUSART_Turn_RX_ON 0001                      ?_EUSART_Turn_TX_ON 0001  
                  ?_Set_PORTB_as_output 0001                                ??_Timers 002B  
                   ??_EUSART_Turn_RX_ON 0030                     ??_EUSART_Turn_TX_ON 0030  
                    __end_of_Set_EUSART 0DE0                                ??___wmul 0024  
                          i1strcpy@dest 0020                                ??_strchr 0005  
                              ??_strcpy 0034                                ??_strlen 0003  
                              ??_strstr 0010      __end_of_LED_Controller_Switch_Left 0884  
            _LED_Controller_Switch_Left 07B8                             __pbssCOMRAM 003F  
           __size_of_Turn_on_Interrupts 0018               __end_of_EUSART_Turn_RX_ON 0DFA  
             __end_of_EUSART_Turn_TX_ON 0DF6                        ?_EUSART_Transmit 0001  
                 ??_Set_PORTA_as_output 0030                        Configure_T0@bits 0034  
                 ??_Set_PORTB_as_output 0030             __size_of_Set_PORTB_as_input 0020  
                             __pintcode 0008                             __pintcodelo 0018  
                __size_of_Toggle_HS_Osc 0006                             __smallconst 0400  
                       _Transmit_Buffer 00C0                          __size_of_RX_TX 0A96  
                   EUSART_Transmit@size 0006                                ?_strncmp 0001  
       EUSART_Analize_data@temp_pointer 0015            __size_ofi1_EUSART_Turn_TX_ON 0004  
                      EUSART_Transmit@i 0007                           _Timer_counter 003F  
                        ___wmul@product 0024                                _IPR1bits 000F9F  
                              _PIE1bits 000F9D                                _PIR1bits 000F9E  
                              _RCONbits 000FD0                       ___wmul@multiplier 0020  
                 Configure_T0@prescaler 0030                                i1_strcpy 0C5A  
            __size_of_EUSART_Turn_RX_ON 0004              __size_of_EUSART_Turn_TX_ON 0004  
                           _INTCON2bits 000FF1                               copy_data0 0BEE  
                         _Toggle_HS_Osc 0DE8                       _Timers_Turn_T0_ON 0DEE  
                              __Hrparam 0000                                __Lrparam 0000  
                    ?_Timers_Turn_T0_ON 0001                        _Timer_multiplier 003E  
                   ??_Timers_Turn_T0_ON 0030                   EUSART_Transmit@buffer 0001  
                              __ptext10 0D36                                __ptext11 0D7A  
                              __ptext12 0D58                                __ptext21 0DFE  
                              __ptext13 0DF6                                __ptext22 0A9E  
                              __ptext23 0C9A                                __ptext15 0D10  
                              __ptext24 04A0                                __ptext16 0884  
                              __ptext25 094A                                __ptext17 07B8  
                              __ptext26 06E2                                __ptext18 0C5A  
                              __ptext27 0CD6                                __ptext19 0DFA  
                              __ptext28 0B44                          ?_Toggle_HS_Osc 0001  
   __end_of_LED_Controller_Switch_Right 094A             _LED_Controller_Switch_Right 0884  
                            strcpy@dest 0030                        __size_of_strncmp 00D6  
             __end_of_Timers_Turn_T0_ON 0DF2                           __size_of_main 001C  
                              _received 0041              __end_of_EUSART_Turn_TX_OFF 0E02  
                              int$flags 0042                              _GPIO_Setup 0AF4  
                            _INTCONbits 000FF2             __end_of_EUSART_Analize_data 05EC  
           ?_LED_Controller_Switch_Left 0001                                intlevel1 0000  
                              intlevel2 0000                           ?_Configure_T0 0030  
                             strcpy@src 0032                               strncmp@_l 0001  
                             strncmp@_r 0003                     i1_EUSART_Turn_TX_ON 0DFA  
            __end_of_Turn_on_Interrupts 0DCE             __end_of_Set_PORTA_as_output 0D7A  
                              strncmp@l 0008                                strncmp@n 0005  
                              strncmp@r 000A                                strstr@nl 0010  
                       ??_Toggle_HS_Osc 0030             __end_of_Set_PORTB_as_output 0D58  
                  ?i1_EUSART_Turn_TX_ON 0001              __size_of_Timers_Turn_T0_ON 0004  
                        ??_Configure_T0 0032              __end_of_Set_PORTB_as_input 0D9A  
               Set_PORTA_as_output@port 0032  LED_Controller_Switch_Right@current_led 002A  
               __size_of_EUSART_Receive 003C                __size_of_EUSART_Transmit 0056  
